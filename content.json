{"meta":{"title":"冰山一树Sankey","subtitle":"Zsの知识树","description":"向下以触冰山，向上以触云层，而中以桑基为流，所见即所得！","author":"Sankey","url":"https://bingshanyishu.github.io","root":"/"},"pages":[{"title":"list","date":"2019-08-10T08:41:10.000Z","updated":"2022-01-31T13:11:49.970Z","comments":true,"path":"List/index.html","permalink":"https://bingshanyishu.github.io/List/index.html","excerpt":"","text":""},{"title":"","date":"2022-01-21T09:18:34.434Z","updated":"2022-01-21T09:18:34.434Z","comments":true,"path":"google1xxxxxxx0.html","permalink":"https://bingshanyishu.github.io/google1xxxxxxx0.html","excerpt":"","text":"google-site-verification: google110e5e5e14c8dcf0.html"},{"title":"404","date":"2019-08-10T08:41:10.000Z","updated":"2022-01-21T09:18:34.177Z","comments":true,"path":"404.html","permalink":"https://bingshanyishu.github.io/404.html","excerpt":"","text":""},{"title":"","date":"2022-01-21T09:18:34.426Z","updated":"2022-01-21T09:18:34.426Z","comments":true,"path":"baidu_verify_xxxxxxx.html","permalink":"https://bingshanyishu.github.io/baidu_verify_xxxxxxx.html","excerpt":"","text":"wvlc3L96QK"},{"title":"about","date":"2019-10-24T16:00:00.000Z","updated":"2022-01-21T09:18:34.423Z","comments":true,"path":"about/index.html","permalink":"https://bingshanyishu.github.io/about/index.html","excerpt":"","text":""},{"title":"categories","date":"2019-10-24T16:00:00.000Z","updated":"2022-01-21T09:18:34.427Z","comments":true,"path":"categories/index.html","permalink":"https://bingshanyishu.github.io/categories/index.html","excerpt":"","text":""},{"title":"archives","date":"2019-10-24T16:00:00.000Z","updated":"2022-01-21T09:18:34.425Z","comments":true,"path":"archives/index.html","permalink":"https://bingshanyishu.github.io/archives/index.html","excerpt":"","text":""},{"title":"留言板","date":"2019-10-24T16:00:00.000Z","updated":"2022-01-27T12:29:56.258Z","comments":true,"path":"contact/index.html","permalink":"https://bingshanyishu.github.io/contact/index.html","excerpt":"","text":"畅所欲言 在这里可以留下你的足迹，欢迎在下方留言，欢迎交换友链，一起交流学习！ 友链 Zsの友链信息 博客名称: 冰山一树Sankey 博客网址: https://bingshanyishu.github.io 博客介绍: 向下以触冰山，向上以触云层，而中以桑基为流，所见即所得！"},{"title":"友链","date":"2019-07-19T08:42:10.000Z","updated":"2022-01-21T09:18:34.433Z","comments":true,"path":"friends/index.html","permalink":"https://bingshanyishu.github.io/friends/index.html","excerpt":"","text":""},{"title":"统计","date":"2020-10-31T02:11:28.000Z","updated":"2022-01-21T09:18:34.430Z","comments":true,"path":"census/index.html","permalink":"https://bingshanyishu.github.io/census/index.html","excerpt":"","text":""},{"title":"资源分享","date":"2019-07-19T08:40:27.000Z","updated":"2022-01-21T09:18:34.435Z","comments":true,"path":"resource/index.html","permalink":"https://bingshanyishu.github.io/resource/index.html","excerpt":"","text":""},{"title":"tags","date":"2019-07-19T08:40:27.000Z","updated":"2022-01-21T09:18:34.440Z","comments":true,"path":"tags/index.html","permalink":"https://bingshanyishu.github.io/tags/index.html","excerpt":"","text":""},{"title":"书籍","date":"2022-01-29T03:34:30.000Z","updated":"2022-01-29T09:26:05.611Z","comments":true,"path":"List/books/index.html","permalink":"https://bingshanyishu.github.io/List/books/index.html","excerpt":"","text":""},{"title":"听听音乐","date":"2019-07-19T08:40:27.000Z","updated":"2022-01-21T09:18:34.215Z","comments":true,"path":"List/music/index.html","permalink":"https://bingshanyishu.github.io/List/music/index.html","excerpt":"","text":""},{"title":"视频","date":"2019-08-10T08:41:10.000Z","updated":"2022-01-28T05:47:29.634Z","comments":true,"path":"List/movies/index.html","permalink":"https://bingshanyishu.github.io/List/movies/index.html","excerpt":"","text":""},{"title":"相册","date":"2022-01-28T05:46:35.206Z","updated":"2022-01-21T09:18:34.191Z","comments":true,"path":"List/galleries/index.html","permalink":"https://bingshanyishu.github.io/List/galleries/index.html","excerpt":"","text":""},{"title":"听听音乐","date":"2019-07-19T08:40:27.000Z","updated":"2022-01-29T09:33:02.100Z","comments":true,"path":"List/tools/index.html","permalink":"https://bingshanyishu.github.io/List/tools/index.html","excerpt":"","text":""},{"title":"乖巧小狗","date":"2022-01-28T05:46:43.706Z","updated":"2022-01-21T09:18:34.194Z","comments":true,"path":"List/galleries/乖巧小狗/index.html","permalink":"https://bingshanyishu.github.io/List/galleries/%E4%B9%96%E5%B7%A7%E5%B0%8F%E7%8B%97/index.html","excerpt":"","text":""},{"title":"二次元风","date":"2022-01-21T09:18:34.196Z","updated":"2022-01-21T09:18:34.196Z","comments":true,"path":"List/galleries/二次元风/index.html","permalink":"https://bingshanyishu.github.io/List/galleries/%E4%BA%8C%E6%AC%A1%E5%85%83%E9%A3%8E/index.html","excerpt":"","text":""},{"title":"动漫人物","date":"2022-01-21T09:18:34.197Z","updated":"2022-01-21T09:18:34.197Z","comments":true,"path":"List/galleries/动漫人物/index.html","permalink":"https://bingshanyishu.github.io/List/galleries/%E5%8A%A8%E6%BC%AB%E4%BA%BA%E7%89%A9/index.html","excerpt":"","text":""},{"title":"动漫风景","date":"2022-01-21T09:18:34.201Z","updated":"2022-01-21T09:18:34.201Z","comments":true,"path":"List/galleries/动漫风景/index.html","permalink":"https://bingshanyishu.github.io/List/galleries/%E5%8A%A8%E6%BC%AB%E9%A3%8E%E6%99%AF/index.html","excerpt":"","text":""},{"title":"呆萌猫咪","date":"2022-01-21T09:18:34.203Z","updated":"2022-01-21T09:18:34.203Z","comments":true,"path":"List/galleries/呆萌猫咪/index.html","permalink":"https://bingshanyishu.github.io/List/galleries/%E5%91%86%E8%90%8C%E7%8C%AB%E5%92%AA/index.html","excerpt":"","text":""},{"title":"动漫插画","date":"2022-01-21T09:18:34.198Z","updated":"2022-01-21T09:18:34.198Z","comments":true,"path":"List/galleries/动漫插画/index.html","permalink":"https://bingshanyishu.github.io/List/galleries/%E5%8A%A8%E6%BC%AB%E6%8F%92%E7%94%BB/index.html","excerpt":"","text":""},{"title":"璀璨星空","date":"2022-01-21T09:18:34.209Z","updated":"2022-01-21T09:18:34.209Z","comments":true,"path":"List/galleries/璀璨星空/index.html","permalink":"https://bingshanyishu.github.io/List/galleries/%E7%92%80%E7%92%A8%E6%98%9F%E7%A9%BA/index.html","excerpt":"","text":""},{"title":"城市风光","date":"2022-01-28T05:46:24.595Z","updated":"2022-01-21T09:18:34.204Z","comments":true,"path":"List/galleries/城市风光/index.html","permalink":"https://bingshanyishu.github.io/List/galleries/%E5%9F%8E%E5%B8%82%E9%A3%8E%E5%85%89/index.html","excerpt":"","text":""},{"title":"炫酷跑车","date":"2022-01-21T09:18:34.206Z","updated":"2022-01-21T09:18:34.206Z","comments":true,"path":"List/galleries/炫酷跑车/index.html","permalink":"https://bingshanyishu.github.io/List/galleries/%E7%82%AB%E9%85%B7%E8%B7%91%E8%BD%A6/index.html","excerpt":"","text":""},{"title":"甜美食品","date":"2022-01-21T09:18:34.210Z","updated":"2022-01-21T09:18:34.210Z","comments":true,"path":"List/galleries/甜美食品/index.html","permalink":"https://bingshanyishu.github.io/List/galleries/%E7%94%9C%E7%BE%8E%E9%A3%9F%E5%93%81/index.html","excerpt":"","text":""},{"title":"清新花卉","date":"2022-01-21T09:18:34.205Z","updated":"2022-01-21T09:18:34.205Z","comments":true,"path":"List/galleries/清新花卉/index.html","permalink":"https://bingshanyishu.github.io/List/galleries/%E6%B8%85%E6%96%B0%E8%8A%B1%E5%8D%89/index.html","excerpt":"","text":""},{"title":"自然风景","date":"2022-01-21T09:18:34.211Z","updated":"2022-01-21T09:18:34.211Z","comments":true,"path":"List/galleries/自然风景/index.html","permalink":"https://bingshanyishu.github.io/List/galleries/%E8%87%AA%E7%84%B6%E9%A3%8E%E6%99%AF/index.html","excerpt":"","text":""}],"posts":[{"title":"博客搭建","slug":"博客搭建","date":"2022-01-31T13:06:48.000Z","updated":"2022-01-31T13:50:12.280Z","comments":true,"path":"posts/f3fb008f.html","link":"","permalink":"https://bingshanyishu.github.io/posts/f3fb008f.html","excerpt":"","text":"博客搭建前言：博客框架介绍参考搭建博客、自己的小窝？快来看看这些开源静态网站生成器_灵魂画师牧码-CSDN博客 1. Hexo GitHub 仓库：https://github.com/hexojs/hexo Stars 数量：29.6k 官方网站：https://hexo.io Hexo 使用 Node.js 开发，很流行。它有数以百计的主题和插件，支持 GFM（GitHub Flavored Markdown），只需要一条命令也能将 Hexo 网站部署到 GitHub Pages、Heroku 等平台上。目前 Vue.js 的官方文档就由它驱动着。不过 Hexo 的速度对比其他框架而言，并不算非常快。 hexo原理hexo是怎么工作的 | 把生命浪费在美好的代码上 (coderunthings.com) hexo原理浅析 - SegmentFault 思否 2. Hugo GitHub 仓库：https://github.com/gohugoio/hugo Stars 数量：41.9k 官方网站：https://gohugo.io/ Hugo 使用 Go 语言开发，号称”世界上最快的网页生成器“。Stars 数量远高于 Hexo。目前有三百多个主题。 3. VuePress GitHub 仓库：https://github.com/vuejs/vuepress Stars 数量：15.6k 官方网站：https://vuepress.vuejs.org/zh/ VuePress 在一众生成器之中算是一个”后起之秀“，起初由尤雨溪牵头开发。等发展到一定程度之后，将会取代 Hexo 成为 Vue.js 官方文档的生成器。它基于 Vue，可以在 Markdown 中使用 Vue 组件，又可以使用 Vue 来开发自定义主题。 4. MkDocs GitHub 仓库：https://github.com/mkdocs/mkdocs Stars 数量：9.1k 官方网站：http://www.mkdocs.org/ MkDocs 使用 Python 开发，更偏向于文档生成。用户不是特别多，只有十几个主题。 5. Gatsby GitHub 仓库：https://github.com/gatsbyjs/gatsby Stars 数量：42.5k 官方网站：https://www.gatsbyjs.org/ Gatsby 作为 GitHub 上面 #static-site-generator 话题最多 Star 数量的项目，基于 React。它超越了静态网站，更强大。可以从任何地方加载数据。 6. Docsify GitHub 仓库：https://github.com/docsifyjs/docsify Stars 数量：12.6k 官方网站：https://docsify.js.org/ Docsify 同样基于 Vue，偏向于文档，动态生成网页，最大的特点是它只有一个 index.html，在你打开网页的时候才开始生成。Docsify 还兼容 IE 11。缺点是对 SEO 并不太友好。 7. Jekyll GitHub 仓库：https://github.com/jekyll/jekyll Stars 数量：39.8k 官方网站：https://jekyllrb.com/ Jekyll 使用 Ruby 开发，它足够简单，能够让你专注于内容。它有将近四百种主题和两百多个插件，光这两项就足以证明它的优秀。 一. 安装Git工具下载地址： Git官网下载：https://git-scm.com/ 国内镜像下载：https://npm.taobao.org/mirrors/git-for-windows/v2.22.0.windows.1/Git-2.22.0-64-bit.exe 国内其他版本下载：https://npm.taobao.org/mirrors/git-for-windows/ 建议使用国内镜像下载，速度最快！ ps:我自己用了官网下载，下载了20多分钟 下载后请安装请参考这篇文章 Windows系统Git安装教程（详解Git安装过程） 装完成后在命令提示符中输入git –version验证是否安装成功 git --version 二. 安装Node.js Node.js 是一个开源和跨平台的 JavaScript 运行时环境。 它几乎是任何类型项目的流行工具！ Node.js是一个事件驱动I/O服务端JavaScript环境，基于Google的V8引擎，V8引擎执行Javascript的速度非常快，性能非常好。 Download | Node.js (nodejs.org)这个网站直接进去下载就行 具体安装教程可参考这篇文章 nodejs下载安装及配置环境 可通过命令行进行查看是否安装成功，打开命令提示符，输入node -v和npm -v，如果出现版本号，那么就安装成功了。如下图 因为node.js用的是国外的网站，为了提高下载速度，可使用国内淘宝镜像的方法。 命令 npm config set registry https://registry.npm.taobao.org 验证命令 npm config get registry 如果返回https://registry.npm.taobao.org，说明镜像配置成功。 三. 安装HexoHexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页 官网文档 | Hexo 在你的某个磁盘中创建一个空的文件 比如我的这里是D/HexoBlog，以后所有的git命令都要在这个文件夹里面运行 在该文件夹下点击 Git Bash Here，输入以下 npm 命令即可安装 $ npm install hexo-cli -g 输入hexo -v即可检验是否安装成功，我这里就不演示了。 具体参考： φ(゜▽゜*)♪咦，又好了！ (yshawlon.cn) (5条消息) 使用 Hexo 搭建静态个人博客与绑定个人域名_bwqiang的博客-CSDN博客 安装好后初始化， $ hexo init 分别执行 $npm install 执行npm install之后 以上如果报错就多运行几次，可能是网络不好，比如我下面的错误 执行hexo g：生成页面文件，也就是一些html,css，js文件，这样打开就是一个渲染好的网站 浏览器，输入网站，localhost:4000,就可以看到初步的本地博客，以后优化博客都要先本地看，再上传到github 四. 创建Github仓库 没有GitHub账号的先注册一下 https://github.com/join，很简单。不会就去网上搜 创建repository。右上角 加号 New repository。 注意：repository名字必须是自己 GitHub 账户名，否则出现 404 错误。 我这里以及弄好了，没有截图，仓库名字就是你的github名字.github.io, 比如我的 bingshanyishu.github.io 这里借别人的图用一下，谢谢 注意：下面readme也要勾选， 最后就创建成功了。 后面上传博客还需要注册令牌： 点击settings 找到了再点击developer settings 点击personal access token 然后点击创建token， note可以随便命名，expiration建议勾选no expiration,意思就是没有时间限制。最后生成令牌，保存好令牌，后面用，最好单独保存，因为令牌只能看一次，也就是注册这次，以后都不能看令牌了。 五. 上传到github仓库5.1 _config.yml修改找到在D:\\HexoBlog下的_config.yml文件，然后打开，我这里使用vscode打开，也可以用记事本打开。 找到： # Deployment ## Docs: https://hexo.io/docs/deployment.html deploy: type: 修改后：（注意：后面冒号的值需要有一个空格） # Deployment ## Docs: https://hexo.io/docs/deployment.html deploy: type: git repository: 自己的仓库地址如下图，直接复制粘贴 //自己的仓库地址 branch: main 5.2 生成ssh右键单击鼠标，点击 Git Bash Here输入以下命令：（第一次使用需要），后面不需要了 git config --global user.name \"Name\" git config --global user.email \"Email\" name是你的github名字，email是你注册github的地址。 生成密钥： 再输入，email是你的github邮箱 ssh-keygen -t rsa -C \"Email\" 按下四次enter后，就可以得到ssh了 复制ssh 找到c盘，用户，个人账户文件下的.ssh文件 例如我的路径：C:\\Users\\27532\\.ssh，27532，和你们不一样 打开id_rsa.pub文件打开，后直接Ctrl+A,Ctrl+C。就复制好了ssh密钥。 5.3 绑定github打开github，点击头像，再点击settings,找到SSH and GPG keys点击 新建SSH，title可以随便取，Key粘贴刚才复制的**.ssh**文件内容 最后点击add ssh key即可 5.4 本地连接github你的博客文件夹下，右键单击鼠标，点击 Git Bash Here输入以下命令，如果如下图所示，出现你的用户名，那就成功了 ssh -T git@github.com 这样就将git与github仓库连接起来了 5.5 上传你的博客文件夹下，右键单击鼠标，点击 Git Bash Here输入以下命令 npm install hexo-deployer-git --save 这样以后可直接通过命令上传博客 最后点击 Git Bash Here输入以下命令 hexo g hexo d 输入hexo d 后第一次会弹出github对话框，然后点击token，输入刚才产生的令牌就可以将其本地的文件上传到github 最后输入网址http://bingshanyishu.github.io/ 即可查看网址了 注意：每次修改本地文件后。 每次使用命令时，都要在D:\\HexoBlog目录下。 hexo cl hexo g hexo s //本地查看 hexo d //上传到github 六. 参考Github + Hexo 搭建个人博客超详细教程_feezxe的博客-CSDN博客 使用 Hexo 搭建静态个人博客与绑定个人域名_bwqiang的博客-CSDN博客 基于Hexo的matery主题搭建博客并优化_悟尘修行记-CSDN博客_hexo matery","categories":[{"name":"项目之树","slug":"项目之树","permalink":"https://bingshanyishu.github.io/categories/%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%A0%91/"}],"tags":[{"name":"Blog","slug":"Blog","permalink":"https://bingshanyishu.github.io/tags/Blog/"}],"author":"Sankey"},{"title":"hexo部署到github时，提示typeError","slug":"hexo部署到github时，提示typeError [ERR_INVALID_ARG_TYPE] The “mode“ argument must be integer. Receive","date":"2022-01-30T16:00:00.000Z","updated":"2022-01-31T14:19:35.291Z","comments":true,"path":"posts/4b2340a4.html","link":"","permalink":"https://bingshanyishu.github.io/posts/4b2340a4.html","excerpt":"","text":"hexo部署到github时，提示typeError [ERR_INVALID_ARG_TYPE]: The “mode“ argument must be integer. Receive…一. 错误情况在部署部署博客时，遇到这个错误， $ hexo d INFO Deploying: git INFO Clearing .deploy_git folder... INFO Copying files from public folder... FATAL Something's wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html TypeError [ERR_INVALID_ARG_TYPE]: The \"mode\" argument must be integer. Received an instance of Object at copyFile (fs.js:2040:10) at tryCatcher (D:\\HexoBlog\\node_modules\\bluebird\\js\\release\\util.js:16:23) at ret (eval at makeNodePromisifiedEval (C:\\Users\\27532\\AppData\\Roaming\\npm\\node_modules\\hexo-cli\\node_modules\\bluebird\\js\\release\\promisify.js:184:12), &lt;anonymous&gt;:13:39) at D:\\HexoBlog\\node_modules\\hexo-fs\\lib\\fs.js:144:39 at tryCatcher (D:\\HexoBlog\\node_modules\\bluebird\\js\\release\\util.js:16:23) at Promise._settlePromiseFromHandler (D:\\HexoBlog\\node_modules\\bluebird\\js\\release\\promise.js:517:31) at Promise._settlePromise (D:\\HexoBlog\\node_modules\\bluebird\\js\\release\\promise.js:574:18) at Promise._settlePromise0 (D:\\HexoBlog\\node_modules\\bluebird\\js\\release\\promise.js:619:10) at Promise._settlePromises (D:\\HexoBlog\\node_modules\\bluebird\\js\\release\\promise.js:699:18) at Promise._fulfill (D:\\HexoBlog\\node_modules\\bluebird\\js\\release\\promise.js:643:18) at Promise._resolveCallback (D:\\HexoBlog\\node_modules\\bluebird\\js\\release\\promise.js:437:57) at Promise._settlePromiseFromHandler (D:\\HexoBlog\\node_modules\\bluebird\\js\\release\\promise.js:529:17) at Promise._settlePromise (D:\\HexoBlog\\node_modules\\bluebird\\js\\release\\promise.js:574:18) at Promise._settlePromise0 (D:\\HexoBlog\\node_modules\\bluebird\\js\\release\\promise.js:619:10) at Promise._settlePromises (D:\\HexoBlog\\node_modules\\bluebird\\js\\release\\promise.js:699:18) at Promise._fulfill (D:\\HexoBlog\\node_modules\\bluebird\\js\\release\\promise.js:643:18) at Promise._resolveCallback (D:\\HexoBlog\\node_modules\\bluebird\\js\\release\\promise.js:437:57) at Promise._settlePromiseFromHandler (D:\\HexoBlog\\node_modules\\bluebird\\js\\release\\promise.js:529:17) at Promise._settlePromise (D:\\HexoBlog\\node_modules\\bluebird\\js\\release\\promise.js:574:18) at Promise._settlePromise0 (D:\\HexoBlog\\node_modules\\bluebird\\js\\release\\promise.js:619:10) at Promise._settlePromises (D:\\HexoBlog\\node_modules\\bluebird\\js\\release\\promise.js:699:18) at Promise._fulfill (D:\\HexoBlog\\node_modules\\bluebird\\js\\release\\promise.js:643:18) 二. 解决方法查阅相关文章得知，是node版本过高导致的 查看了我的版本号 $ hexo -v hexo: 3.9.0 hexo-cli: 4.3.0 os: win32 10.0.19042 node: 14.17.5 v8: 8.4.371.23-node.76 uv: 1.41.0 zlib: 1.2.11 brotli: 1.0.9 ares: 1.17.2 modules: 83 nghttp2: 1.42.0 napi: 8 llhttp: 2.1.3 openssl: 1.1.1k cldr: 39.0 icu: 69.1 tz: 2021a unicode: 13.0 hexo 版本才3.9.0, 而node 版本已经是14.17.5了 更换版本 Releases · coreybutler/nvm-windows (github.com)下载nvm 安装 (5条消息) Node版本的升级和降级之node版本管理工具nvm_Pioneer-CSDN博客_nvm升级node版本 windows如何把已安装的nodejs高版本降级为低版本(图文教程)_node.js_脚本之家 (jb51.net) 三. 附常用nvm命令查看安装过的node版本 nvm list 安装某个版本nvm install &lt;version&gt; 使用某个版本 nvm use&lt;version&gt; 载某个node版本 nvm uninstall &lt;version&gt; 如果出现乱码 更改了cmd的权限成功解决问题，以管理员运行cmd窗口，再输入nvm use 12.14.0解决问题 再运行 hexo d 成功解决","categories":[{"name":"项目之树","slug":"项目之树","permalink":"https://bingshanyishu.github.io/categories/%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%A0%91/"}],"tags":[{"name":"Blog问题","slug":"Blog问题","permalink":"https://bingshanyishu.github.io/tags/Blog%E9%97%AE%E9%A2%98/"}],"author":"Sankey"},{"title":"jQuery+CSS3实现的文字背景粒子特效","slug":"jQuery+CSS3","date":"2022-01-30T16:00:00.000Z","updated":"2022-01-31T13:46:25.607Z","comments":true,"path":"posts/4b3510a4.html","link":"","permalink":"https://bingshanyishu.github.io/posts/4b3510a4.html","excerpt":"","text":"前言一款jQuery+CSS3的文字背景粒子动画特效，一共6种粒子效果，每种文字背景的粒子效果都不同，有漂浮的有坠落的等等。 本文转载于LuckySEc用于自用，文字背景粒子特效 | LuckySec (luckyzmj.cn)。感谢大佬的分享。 0x001 特效演示 This is fires This is lines This is hearts This is bubbles This is confetti This is sunbeams .particletext { } .fire > .particle { position: absolute; background-color: rgba(255, 193, 7, 0.5); border-radius: 40px; border-top-right-radius: 0px; -webkit-animation: fires 0.8s linear infinite; animation: fires 0.8s linear infinite; -webkit-transform: rotate(-45deg); transform: rotate(-45deg); opacity: 0; } /*css keyframes 动画*/ @-webkit-keyframes fires { 0% { -webkit-transform: rotate(-70deg) translateY(0%); transform: rotate(-70deg) translateY(0%); } 25% { -webkit-transform: rotate(-20deg) translateY(-5%); transform: rotate(-20deg) translateY(-5%); opacity: 1; } 50% { -webkit-transform: rotate(-70deg) translateY(-10%); transform: rotate(-70deg) translateY(-10%); } 75% { -webkit-transform: rotate(-20deg) translateY(-20%); transform: rotate(-20deg) translateY(-20%); } 100% { -webkit-transform: rotate(-70deg) translateY(-40%); transform: rotate(-70deg) translateY(-40%); opacity: 1; } } @keyframes fires { 0% { -webkit-transform: rotate(-70deg) translateY(0%); transform: rotate(-70deg) translateY(0%); } 25% { -webkit-transform: rotate(-20deg) translateY(-5%); transform: rotate(-20deg) translateY(-5%); opacity: 1; } 50% { -webkit-transform: rotate(-70deg) translateY(-10%); transform: rotate(-70deg) translateY(-10%); } 75% { -webkit-transform: rotate(-20deg) translateY(-20%); transform: rotate(-20deg) translateY(-20%); } 100% { -webkit-transform: rotate(-70deg) translateY(-40%); transform: rotate(-70deg) translateY(-40%); opacity: 1; } } function fire() { $.each($(\".particletext.fire\"), function(){ var firecount = ($(this).width()/50)*20; for(var i = 0; i .particle { position: absolute; background-color: rgba(244, 67, 54, 0.5); -webkit-animation: lines 3s linear infinite; animation: lines 3s linear infinite; } @-webkit-keyframes lines { 0%, 50%, 100% { -webkit-transform: translateY(0%); transform: translateY(0%); } 25% { -webkit-transform: translateY(100%); transform: translateY(100%); } 75% { -webkit-transform: translateY(-100%); transform: translateY(-100%); } } @keyframes lines { 0%, 50%, 100% { -webkit-transform: translateY(0%); transform: translateY(0%); } 25% { -webkit-transform: translateY(100%); transform: translateY(100%); } 75% { -webkit-transform: translateY(-100%); transform: translateY(-100%); } } function lines() { $.each($(\".particletext.lines\"), function(){ var linecount = ($(this).width()/50)*10; for(var i = 0; i .particle { opacity: 0; position: absolute; background-color: #cc2a5d; -webkit-animation: hearts 3s ease-in infinite; animation: hearts 3s ease-in infinite; } .hearts > .particle:before,.hearts > .particle:after { position: absolute; content: ''; border-radius: 100px; top: 0px; left: 0px; width: 100%; height: 100%; background-color: #cc2a5d; } .hearts > .particle:before { -webkit-transform: translateX(-50%); transform: translateX(-50%); } .hearts > .particle:after { -webkit-transform: translateY(-50%); transform: translateY(-50%); } @-webkit-keyframes hearts { 0% { opacity: 0; -webkit-transform: translate(0, 0%) rotate(45deg); transform: translate(0, 0%) rotate(45deg); } 20% { opacity: 0.8; -webkit-transform: translate(0, -20%) rotate(45deg); transform: translate(0, -20%) rotate(45deg); } 100% { opacity: 0; -webkit-transform: translate(0, -1000%) rotate(45deg); transform: translate(0, -1000%) rotate(45deg); } } @keyframes hearts { 0% { opacity: 0; -webkit-transform: translate(0, 0%) rotate(45deg); transform: translate(0, 0%) rotate(45deg); } 20% { opacity: 0.8; -webkit-transform: translate(0, -20%) rotate(45deg); transform: translate(0, -20%) rotate(45deg); } 100% { opacity: 0; -webkit-transform: translate(0, -1000%) rotate(45deg); transform: translate(0, -1000%) rotate(45deg); } } function hearts() { $.each($(\".particletext.hearts\"), function(){ var heartcount = ($(this).width()/50)*5; for(var i = 0; i .particle { opacity: 0; position: absolute; background-color: rgba(33, 150, 243, 0.5); -webkit-animation: bubbles 3s ease-in infinite; animation: bubbles 3s ease-in infinite; border-radius: 100%; } @-webkit-keyframes bubbles { 0% { opacity: 0; } 20% { opacity: 1; -webkit-transform: translate(0, -20%); transform: translate(0, -20%); } 100% { opacity: 0; -webkit-transform: translate(0, -1000%); transform: translate(0, -1000%); } } @keyframes bubbles { 0% { opacity: 0; } 20% { opacity: 1; -webkit-transform: translate(0, -20%); transform: translate(0, -20%); } 100% { opacity: 0; -webkit-transform: translate(0, -1000%); transform: translate(0, -1000%); } } function bubbles() { $.each($(\".particletext.bubbles\"), function(){ var bubblecount = ($(this).width()/50)*10; for(var i = 0; i .particle { opacity: 0; position: absolute; -webkit-animation: confetti 3s ease-in infinite; animation: confetti 3s ease-in infinite; } .confetti > .particle.c1 { background-color: rgba(76, 175, 80, 0.5); } .confetti > .particle.c2 { background-color: rgba(156, 39, 176, 0.5); } @-webkit-keyframes confetti { 0% { opacity: 0; -webkit-transform: translateY(0%) rotate(0deg); transform: translateY(0%) rotate(0deg); } 10% { opacity: 1; } 35% { -webkit-transform: translateY(-800%) rotate(270deg); transform: translateY(-800%) rotate(270deg); } 80% { opacity: 1; } 100% { opacity: 0; -webkit-transform: translateY(2000%) rotate(1440deg); transform: translateY(2000%) rotate(1440deg); } } @keyframes confetti { 0% { opacity: 0; -webkit-transform: translateY(0%) rotate(0deg); transform: translateY(0%) rotate(0deg); } 10% { opacity: 1; } 35% { -webkit-transform: translateY(-800%) rotate(270deg); transform: translateY(-800%) rotate(270deg); } 80% { opacity: 1; } 100% { opacity: 0; -webkit-transform: translateY(2000%) rotate(1440deg); transform: translateY(2000%) rotate(1440deg); } } function confetti() { $.each($(\".particletext.confetti\"), function(){ var confetticount = ($(this).width()/50)*10; for(var i = 0; i .particle { position: absolute; background-color: rgba(253, 216, 53, 0.5); -webkit-animation: sunbeams 3s linear infinite; animation: sunbeams 3s linear infinite; } @-webkit-keyframes sunbeams { 0% { -webkit-transform: translateY(40%) rotate(0deg); transform: translateY(40%) rotate(0deg); } 50% { -webkit-transform: translateY(-40%) rotate(180deg); transform: translateY(-40%) rotate(180deg); } 100% { -webkit-transform: translateY(40%) rotate(360deg); transform: translateY(40%) rotate(360deg); } 0%,14%,17%,43%,53%,71%,80%,94%,100% { opacity: 0; } 6%,15%,24%,28%,48%,55%,78%,82%,99% { opacity: 1; } } @keyframes sunbeams { 0% { -webkit-transform: translateY(40%) rotate(0deg); transform: translateY(40%) rotate(0deg); } 50% { -webkit-transform: translateY(-40%) rotate(180deg); transform: translateY(-40%) rotate(180deg); } 100% { -webkit-transform: translateY(40%) rotate(360deg); transform: translateY(40%) rotate(360deg); } 0%,14%,17%,43%,53%,71%,80%,94%,100% { opacity: 0; } 6%,15%,24%,28%,48%,55%,78%,82%,99% { opacity: 1; } } function sunbeams() { $.each($(\".particletext.sunbeams\"), function(){ var linecount = ($(this).width()/50)*10; for(var i = 0; i","categories":[{"name":"技能之树","slug":"技能之树","permalink":"https://bingshanyishu.github.io/categories/%E6%8A%80%E8%83%BD%E4%B9%8B%E6%A0%91/"}],"tags":[{"name":"CSS3","slug":"CSS3","permalink":"https://bingshanyishu.github.io/tags/CSS3/"},{"name":"粒子特效","slug":"粒子特效","permalink":"https://bingshanyishu.github.io/tags/%E7%B2%92%E5%AD%90%E7%89%B9%E6%95%88/"}],"author":"Sankey"},{"title":"博客优化(1)一基本信息的更改","slug":"博客优化(1)一基本信息的更改","date":"2022-01-30T16:00:00.000Z","updated":"2022-01-31T14:43:42.378Z","comments":true,"path":"posts/4b3500a4.html","link":"","permalink":"https://bingshanyishu.github.io/posts/4b3500a4.html","excerpt":"","text":"博客优化(1)一基本信息的更改本博客基于Lucky大佬的博客进行优化，改成属于自己的风格，再此感谢大佬的开源，让自己节约大部分调试，以及寻找资料的时间与精力。 LuakSec官网：LuckySec (luckyzmj.cn) 开源博客文章：LuckyBlog开源搭建教程 | LuckySec (luckyzmj.cn) 1. 设计图标和logo每个网站都有相对于的图标彰显特色与理念，我也想设计出自己的图标，无奈自己不会设计，只能去那些logo网站看看找找灵感 第一个： LOGO设计神器 - logo在线设计生成器，免费在线生成公司logo设计！ (logosc.cn) step1 : 输入logo名称 step2:选择行业 step3:选择色系，我这里我选择冷色系 step4:选择字体 点击生成logo就可以看到很多logo了 挑选所需要的logo 我挑了大半天都没有找到想要的。 我就用另外一个网站在进行设计 YEELOGO_logo在线制作 点击下载，然后在做一些优化，比如去背景，调整大小，logo就做好了。 去背景网站消除图片中的背景 – remove.bg 最后将自己做的logo替换原来的logo， 2. 修改部署平台编辑根目录下的配置文件MyBlog/_config.yml，找到如下内容并修改 deploy: - type: git repo: git@github.com:bingshanyishu/bingshanyishu.github.io.git branch: master 3. 修改网站信息编辑根目录下的配置文件MyBlog/_config.yml，找到如下内容并修改为自己的信息 # Site title: 冰山一树Sankey subtitle: 'Zsの博客' description: '向下以触冰山，向上以触云层，而中以桑基为流，所见即所得！' keywords: '可视化 前端 数据分析 电气' author: Sankey language: zh-CN timezone: '' # URL ## If your site is put in a subdirectory, set url as 'http://example.com/child' and root as '/child/' url: https://bingshanyishu.github.io/ root: / # permalink: :year/:month/:day/:title/ permalink: posts/:abbrlink.html # p 是自定义的前缀 abbrlink: alg: crc32 #算法： crc16(default) and crc32 rep: hex #进制： dec(default) and hex permalink_defaults: pretty_urls: trailing_index: true # Set to false to remove trailing 'index.html' from permalinks trailing_html: true # Set to false to remove trailing '.html' from permalinks 4. 修改博客头像编辑主题目录下的配置文件MyBlog/themes/hexo-theme-matery/_config.yml，找到如下内容并修改,也可直接替换主题文件下的source中的favicon.png和medias中的logo.png # Configure website favicon and LOGO # 将以下改为自己的头像链接即可 favicon: https://s1.ax1x.com/2020/05/17/YR20js.jpg logo: https://s1.ax1x.com/2020/05/17/YRWsYT.png #如果是替换主题文件中内容·： # 配置网站favicon和网站LOGO favicon: /favicon.png logo: /medias/logo.png 5. 修改留言板简介演示效果如下： 编辑 /MyBlog/contact/index.md，修改为如下信息 --- title: contact date: 2019-10-25 00:00:00 type: \"contact\" layout: \"contact\" --- ## 畅所欲言 --- 在这里可以留下你的足迹，欢迎在下方留言，欢迎交换友链，一起交流学习！ ## 友链 --- Zsの友链信息 博客名称: 冰山一树Sankey 博客网址: https://bingshanyishu.github.io 博客介绍: 向下以触冰山，向上以触云层，而中以桑基为流，所见即所得！ 6. 修改音乐列表想要修改自己喜欢的音乐之前，需要先获取音乐列表的id。 登录网易云音乐网页版，找到自己喜欢的歌单，上面的ID对应修改 server： netease——&gt;网易云音乐 tencent——&gt;QQ音乐 kugou——&gt;酷狗音乐 编辑主题目录下的配置文件MyBlog/themes/hexo-theme-matery/_config.yml，找到如下内容并修改 # Whether to display the musics. # 是否在首页显示音乐. music: enable: true title: #非吸底模式有效 enable: true show: 听听音乐 autoHide: true # hide automaticaly server: netease #require music platform: netease, tencent, kugou, xiami, baidu type: playlist #require song, playlist, album, search, artist id: 7262197380 #require song id / playlist id / album id / search keyword fixed: true # 开启吸底模式 autoplay: false # 是否自动播放 theme: '#42b983' loop: 'all' # 音频循环播放, 可选值: 'all', 'one', 'none' order: 'random' # 音频循环顺序, 可选值: 'list', 'random' preload: 'auto' # 预加载，可选值: 'none', 'metadata', 'auto' volume: 0.7 # 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效 listFolded: true # 列表默认折叠 hideLrc: true # 隐藏歌词 # Whether to display the musics. # 单独的音乐页面. musics: enable: true title: #非吸底模式有效 enable: true show: 听听音乐 server: netease #require music platform: netease, tencent, kugou, xiami, baidu type: playlist #require song, playlist, album, search, artist id: 7262197380 #require song id / playlist id / album id / search keyword fixed: false # 开启吸底模式 autoplay: true # 是否自动播放 theme: '#42b983' loop: 'all' # 音频循环播放, 可选值: 'all', 'one', 'none' order: 'random' # 音频循环顺序, 可选值: 'list', 'random' preload: 'auto' # 预加载，可选值: 'none', 'metadata', 'auto' volume: 0.7 # 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效 listFolded: false # 列表默认折叠 listMaxHeight: \"525px\" #列表最大高度 7. 绑定 Valine 评论可参考Valine：一款基于Leancloud的无后端评论系统 - 简书 (jianshu.com) 先注册leancloud账号，官网 valine官网快速开始 | Valine 一款快速、简洁且高效的无后端评论系统。，进去点击注册可进入leancount官网 注册 实名认证加验证邮箱 然后回到leancloud主页，应用名称随便，选择开发板即可 然后点击应用，设置，应用凭证，即可看到自己的AppID和AppKey 编辑主题目录下的配置文件MyBlog/themes/hexo-theme-matery/_config.yml，找到如下内容并修改 # Valine 评论模块的配置，默认为不激活，如要使用，就请激活该配置项，并设置 appId 和 appKey. valine: enable: true appId: Ucrxxxxxxxxxxxxxxxx-xxxxsz # 自行注册valine获取 appKey: zPsLxxxxxxxxxxxxxxerLmd # 自行注册valine获取 notify: true verify: true visitor: true avatar: 'monsterid' # Gravatar style : mm/identicon/monsterid/wavatar/retro/hide pageSize: 10 placeholder: '留下你的足迹..' # Comment Box placeholder background: /medias/comment_bg.png count: true enableQQ: 16463223 # 改为自己的QQ号 recordIP: true requiredFields: - nick - mail guest_info: - nick - mail - link master: - 46606772953bed0812789d6dc955614e # md5加密后的博主邮箱 metaPlaceholder: # 输入框的背景文字 nick: 昵称/QQ号(必填) mail: 邮箱(必填) link: 网址(https://) lang: zh-CN tagMeta: # The String Array of Words to show Flag.[Just Only xCss Style mode] - 博主 - 小伙伴 - 访客 friends: # The MD5 String Array of friends Email to show friends Flag.[Just Only xCss Style mode] - cb3e577ff029d6073400d5557effd41f - 之后设计MD5加密邮箱，百度随便搜搜MD5加密就有 放在上面中 master: - 46606772953bed0812789d6dc955614e # md5加密后的博主邮箱 8. 绑定 DaoVoice 在线聊天首先在DaoVoice官网上注册一个账号。 注册成功后，第一次登录，会弹出一个窗口，填完相关信息后。点击应用设置，点击安装到网站，然后就可以找到我们需要的appid了。 编辑主题目录下的配置文件MyBlog/themes/hexo-theme-matery/_config.yml，找到如下内容并修改 daovoice: enable: true app_id: 4xxxxxxxe #DaoVoice中的app_id 小tips：点击应用设置，聊天设置可自行设计图标显示样式 ， 9. 快捷导航页面个性化编辑文件MyBlog/source/tools/index.html，以下简单标记出几处，还有其他涉及到博客信息的内容都需要改为你自己的博客信息即可。 10. 添加友情链接编辑文件MyBlog/suorce/_data/friends.json，按如下格式添加友情 [ { \"avatar\": \"https://s1.ax1x.com/2020/05/17/YRWsYT.png\", \"name\": \"Luckey\", \"introduction\": \"越努力，越幸运\", \"url\": \"http://www.luckyzmj.cn\", \"title\": \"访问主页\" },{ \"avatar\": \"https://sunhwee.com/hwsun.jpg\", \"name\": \"洪卫の博客\", \"introduction\": \"UESTC CVer\", \"url\": \"http://sunhwee.com\", \"title\": \"访问主页\" } ] 11. 添加相册比如你的图片上传图床后，链接地址如下 https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/galleries/璀璨星空/01.jpg https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/galleries/璀璨星空/02.jpg https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/galleries/动漫风景/01.jpg https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/galleries/动漫风景/02.jpg ... 首先提取出图片链接公共的部分，作为图床地址 https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/galleries/ 然后再提取图片地址中不同的部分，作为图片地址 璀璨星空/01.jpg 璀璨星空/02.jpg 动漫风景/01.jpg 动漫风景/03.jpg ... 具体怎么分割根据你自己图床的链接格式而定，以上为我的github图床格式为例。 将相册图床的地址改为你自己的图床地址，需要更改两处文件 # 例如我的图床地址为： https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/galleries/ themes/hexo-theme-matery/layout/galleries.ejs themes/hexo-theme-matery/layout/gallerie.ejs 为每个相册添加链接地址，在根目录/source/List/galleries/下新建 相册名称 文件夹，并在该文件夹下新建 index.md 最后，在根目录/source/_data/galleries.json中添加图片链接，格式如下, [ { \"name\": \"璀璨星空\", \"cover\": \"璀璨星空/01.jpg\", \"description\": \"璀璨星空\", \"photos\": [ \"璀璨星空/01.jpg\", \"璀璨星空/02.jpg\", \"璀璨星空/03.jpg\", \"璀璨星空/04.jpg\", \"璀璨星空/05.jpg\", \"璀璨星空/06.jpg\", \"璀璨星空/07.jpg\", \"璀璨星空/08.jpg\", \"璀璨星空/09.jpg\", \"璀璨星空/10.jpg\", \"璀璨星空/11.jpg\", \"璀璨星空/12.jpg\", \"璀璨星空/13.jpg\", \"璀璨星空/14.jpg\", \"璀璨星空/15.jpg\", \"璀璨星空/16.jpg\" ] }, { \"name\": \"动漫风景\", \"cover\": \"动漫风景/01.jpg\", \"description\": \"动漫风景\", \"photos\": [ \"动漫风景/01.jpg\", \"动漫风景/02.jpg\", \"动漫风景/03.jpg\", \"动漫风景/04.jpg\", \"动漫风景/05.jpg\", \"动漫风景/06.jpg\", \"动漫风景/07.jpg\", \"动漫风景/08.jpg\", \"动漫风景/09.jpg\", \"动漫风景/10.jpg\", \"动漫风景/11.jpg\", \"动漫风景/12.jpg\", \"动漫风景/13.jpg\", \"动漫风景/14.jpg\", \"动漫风景/15.jpg\", \"动漫风景/16.jpg\" ] } ] 12. 站点统计功能站点统计的数据来源于百度统计,当你的网站被百度收录后就会在百度统计中出现数据，具体效果如下： 由于博客的统计页面数据不能直接从百度站点中调用，因此需要自行从百度站点中将相应数据填入博客站点统计页面的源代码文件中，个人建议每隔一个月手动更新一次数据。 打开MyBlog\\themes\\hexo-theme-matery\\layout\\census.ejs文件，将百度统计中的数据填入源代码中，修改代码如下： 13. 仿Windows个性化仿Windows页面是采用YLUI实现的，YLUI提供了社区版本供大家学习使用，具体效果如下： 这里我选择关闭了 大家可以查看YLUI官方的开发文档进行开发，有不懂的可以加官方的QQ群：191372634 进行讨论。 14. 博客特色背景图无文章特色背景图： 打开主题配置文件MyBlog\\themes\\hexo-theme-matery\\_config.yml，修改替换如下代码即可： # The post featured images that needs to be displayed when there is no image. # 无文章特色图片时需要显示的文章特色图片. featureImages: - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/1.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/2.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/3.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/4.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/5.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/6.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/7.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/8.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/9.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/10.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/11.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/12.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/13.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/14.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/15.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/16.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/17.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/18.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/19.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/20.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/21.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/22.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/23.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/24.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/25.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/26.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/27.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/28.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/29.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/30.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/31.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/32.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/33.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/34.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/35.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/36.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/37.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/38.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/39.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/40.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/41.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/42.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/43.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/44.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/45.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/46.jpg 15. 新增社交链接由于默认的链接没有b站，CSDN等，这里添加自定义 在主题的 _config.yml 文件中，默认支持 QQ、GitHub 和邮箱的配置，可以在主题文件的 /layout/_partial/social-link.ejs 文件中，新增、修改你需要的社交链接地址 将下面需要添加的链接代码放到该文件的最后面，如果每个可放在rss之前 添加csdn链接 &lt;% if (theme.socialLink.csdn) { %&gt; &lt;a href=\"https://www.csdn.net/&lt;%= theme.socialLink.csdn %&gt;\" class=\"tooltipped\" target=\"_blank\" data-tooltip=\"访问我的CSDN主页\" data-position=\"top\" data-delay=\"50\"&gt; &lt;i class=\"fa fa-codiepie\"&gt;&lt;/i&gt; &lt;/a&gt; &lt;% } %&gt; 添加b站链接 &lt;% if (theme.socialLink.bilibili) { %&gt; &lt;a href=\"&lt;%= theme.socialLink.bilibili %&gt;\" class=\"tooltipped\" target=\"_blank\" data-tooltip=\"访问我的bilibili主页\" data-position=\"top\" data-delay=\"50\"&gt; &lt;i class=\"fab fa-codiepie\"&gt;&lt;/i&gt; &lt;/a&gt; &lt;% } %&gt; 社交图标可去这个网站中查找：图标库 – Font Awesome 中文网，但是没有csdn和b站链接，可找相似的来替代。 但注意：使用font awesome图标版本也需要对应，不然无法显示。这里版本为5.11.0 然后在_config.yml中的socialLink: 加对应即可，awesome图标可去这些博客了解 Font Awesome5.x 页面引入的几种方式和应用,及与4.x的变化 Font Awesome，一套绝佳的图标字体库和CSS框架 (dashgame.com) socialLink: csdn: https://blog.csdn.net/m0_59464010?spm=1000.2115.3001.5343 //改成自己的 bilibili: https://bilibili.com/484432829?from=search&amp;seid=1051383716784056202 //改成自己的 16.勿渲染自定义页面hexo在生成页面后会自动渲染所有的html页面，但是有时候有一些自定义页面采用自己渲染的代码，如果再加上hexo的渲染，会引起混乱。为此我们可以定义让hexo不要渲染我们自己的页面。 font matter方法将代码直接写到index.md中，然后再Front matter 中添加 layout: false title: tools date: 2020-04-28 00:00:00 type: \"tools\" layout: false --- skip render方法在博客根目录下的 _config.yml，找到 skip_render # 指定目录跳过hexo渲染 skip_render: - 'tools/*' - 'tools/**' 注：tools/* 表示在目录 source/fireworks 下的文件全部跳过渲染，tools/** 表示在博客根目录 source/tools/ 文件夹下的文件全部跳过渲染（例如页面的 js、css 在另一个文件夹中） 例：webstackwebstack是一个纯静态的网址导航网站，内容均由viggo收集并整理。项目基于bootstrap前端框架开发。 Github：https://github.com/WebStackPage/WebStackPage.github.io 在博客根目录 source/下新建tools，然后新建index.html,将webstack网页源码全选复制粘贴到里面。 然后打开博客根目录下配置文件_config.yml，找到skip_render，做如下修改： skip_render: - 'tools/*' - 'tools/**'","categories":[{"name":"项目之树","slug":"项目之树","permalink":"https://bingshanyishu.github.io/categories/%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%A0%91/"}],"tags":[{"name":"blog","slug":"blog","permalink":"https://bingshanyishu.github.io/tags/blog/"}],"author":"Sankey"}],"categories":[{"name":"项目之树","slug":"项目之树","permalink":"https://bingshanyishu.github.io/categories/%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%A0%91/"},{"name":"技能之树","slug":"技能之树","permalink":"https://bingshanyishu.github.io/categories/%E6%8A%80%E8%83%BD%E4%B9%8B%E6%A0%91/"}],"tags":[{"name":"Blog","slug":"Blog","permalink":"https://bingshanyishu.github.io/tags/Blog/"},{"name":"Blog问题","slug":"Blog问题","permalink":"https://bingshanyishu.github.io/tags/Blog%E9%97%AE%E9%A2%98/"},{"name":"CSS3","slug":"CSS3","permalink":"https://bingshanyishu.github.io/tags/CSS3/"},{"name":"粒子特效","slug":"粒子特效","permalink":"https://bingshanyishu.github.io/tags/%E7%B2%92%E5%AD%90%E7%89%B9%E6%95%88/"},{"name":"blog","slug":"blog","permalink":"https://bingshanyishu.github.io/tags/blog/"}]}