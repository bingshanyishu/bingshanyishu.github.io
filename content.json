{"meta":{"title":"冰山一树Sankey","subtitle":"Zsの知识树","description":"向下以触冰山，向上以触云层，而中以桑基为流，所见即所得！","author":"Sankey","url":"https://bingshanyishu.github.io","root":"/"},"pages":[{"title":"","date":"2022-02-05T07:49:54.830Z","updated":"2022-02-05T07:49:54.830Z","comments":true,"path":"google1xxxxxxx0.html","permalink":"https://bingshanyishu.github.io/google1xxxxxxx0.html","excerpt":"","text":"google-site-verification: google110e5e5e14c8dcf0.html"},{"title":"","date":"2022-03-03T12:48:22.221Z","updated":"2022-02-05T07:49:54.827Z","comments":true,"path":"baidu_verify_xxxxxxx.html","permalink":"https://bingshanyishu.github.io/baidu_verify_xxxxxxx.html","excerpt":"","text":"wvlc3L96QK"},{"title":"404","date":"2019-08-10T08:41:10.000Z","updated":"2022-03-03T12:26:17.034Z","comments":true,"path":"404.html","permalink":"https://bingshanyishu.github.io/404.html","excerpt":"","text":""},{"title":"list","date":"2019-08-10T08:41:10.000Z","updated":"2022-02-05T07:49:54.737Z","comments":true,"path":"List/index.html","permalink":"https://bingshanyishu.github.io/List/index.html","excerpt":"","text":""},{"title":"categories","date":"2019-10-24T16:00:00.000Z","updated":"2022-02-05T07:49:54.828Z","comments":true,"path":"categories/index.html","permalink":"https://bingshanyishu.github.io/categories/index.html","excerpt":"","text":""},{"title":"archives","date":"2019-10-24T16:00:00.000Z","updated":"2022-02-05T07:49:54.827Z","comments":true,"path":"archives/index.html","permalink":"https://bingshanyishu.github.io/archives/index.html","excerpt":"","text":""},{"title":"about","date":"2019-10-24T16:00:00.000Z","updated":"2022-02-05T07:49:54.827Z","comments":true,"path":"about/index.html","permalink":"https://bingshanyishu.github.io/about/index.html","excerpt":"","text":""},{"title":"留言板","date":"2019-10-24T16:00:00.000Z","updated":"2022-02-05T07:49:54.829Z","comments":true,"path":"contact/index.html","permalink":"https://bingshanyishu.github.io/contact/index.html","excerpt":"","text":"畅所欲言 在这里可以留下你的足迹，欢迎在下方留言，欢迎交换友链，一起交流学习！ 友链 Zsの友链信息 博客名称: 冰山一树Sankey 博客网址: https://bingshanyishu.github.io 博客介绍: 向下以触冰山，向上以触云层，而中以桑基为流，所见即所得！"},{"title":"pdf","date":"2022-03-03T08:40:27.000Z","updated":"2022-03-04T13:57:14.697Z","comments":true,"path":"pdf/index.html","permalink":"https://bingshanyishu.github.io/pdf/index.html","excerpt":"","text":""},{"title":"统计","date":"2020-10-31T02:11:28.000Z","updated":"2022-02-05T07:49:54.828Z","comments":true,"path":"census/index.html","permalink":"https://bingshanyishu.github.io/census/index.html","excerpt":"","text":""},{"title":"友链","date":"2019-07-19T08:42:10.000Z","updated":"2022-02-05T07:49:54.829Z","comments":true,"path":"friends/index.html","permalink":"https://bingshanyishu.github.io/friends/index.html","excerpt":"","text":""},{"title":"资源分享","date":"2019-07-19T08:40:27.000Z","updated":"2022-02-05T07:49:54.833Z","comments":true,"path":"resource/index.html","permalink":"https://bingshanyishu.github.io/resource/index.html","excerpt":"","text":""},{"title":"tags","date":"2019-07-19T08:40:27.000Z","updated":"2022-02-05T07:49:54.833Z","comments":true,"path":"tags/index.html","permalink":"https://bingshanyishu.github.io/tags/index.html","excerpt":"","text":""},{"title":"视频","date":"2019-08-10T08:41:10.000Z","updated":"2022-02-05T07:49:54.738Z","comments":true,"path":"List/movies/index.html","permalink":"https://bingshanyishu.github.io/List/movies/index.html","excerpt":"","text":""},{"title":"相册","date":"2022-02-05T07:49:54.726Z","updated":"2022-02-05T07:49:54.726Z","comments":true,"path":"List/galleries/index.html","permalink":"https://bingshanyishu.github.io/List/galleries/index.html","excerpt":"","text":""},{"title":"动漫人物","date":"2022-02-05T07:49:54.727Z","updated":"2022-02-05T07:49:54.727Z","comments":true,"path":"List/galleries/动漫人物/index.html","permalink":"https://bingshanyishu.github.io/List/galleries/%E5%8A%A8%E6%BC%AB%E4%BA%BA%E7%89%A9/index.html","excerpt":"","text":""},{"title":"听听音乐","date":"2019-07-19T08:40:27.000Z","updated":"2022-02-05T07:49:54.739Z","comments":true,"path":"List/tools/index.html","permalink":"https://bingshanyishu.github.io/List/tools/index.html","excerpt":"","text":""},{"title":"听听音乐","date":"2019-07-19T08:40:27.000Z","updated":"2022-02-05T07:49:54.738Z","comments":true,"path":"List/music/index.html","permalink":"https://bingshanyishu.github.io/List/music/index.html","excerpt":"","text":""},{"title":"二次元风","date":"2022-02-05T07:49:54.726Z","updated":"2022-02-05T07:49:54.726Z","comments":true,"path":"List/galleries/二次元风/index.html","permalink":"https://bingshanyishu.github.io/List/galleries/%E4%BA%8C%E6%AC%A1%E5%85%83%E9%A3%8E/index.html","excerpt":"","text":""},{"title":"动漫插画","date":"2022-02-05T07:49:54.727Z","updated":"2022-02-05T07:49:54.727Z","comments":true,"path":"List/galleries/动漫插画/index.html","permalink":"https://bingshanyishu.github.io/List/galleries/%E5%8A%A8%E6%BC%AB%E6%8F%92%E7%94%BB/index.html","excerpt":"","text":""},{"title":"乖巧小狗","date":"2022-02-05T07:49:54.726Z","updated":"2022-02-05T07:49:54.726Z","comments":true,"path":"List/galleries/乖巧小狗/index.html","permalink":"https://bingshanyishu.github.io/List/galleries/%E4%B9%96%E5%B7%A7%E5%B0%8F%E7%8B%97/index.html","excerpt":"","text":""},{"title":"动漫风景","date":"2022-02-05T07:49:54.728Z","updated":"2022-02-05T07:49:54.728Z","comments":true,"path":"List/galleries/动漫风景/index.html","permalink":"https://bingshanyishu.github.io/List/galleries/%E5%8A%A8%E6%BC%AB%E9%A3%8E%E6%99%AF/index.html","excerpt":"","text":""},{"title":"呆萌猫咪","date":"2022-02-05T07:49:54.734Z","updated":"2022-02-05T07:49:54.734Z","comments":true,"path":"List/galleries/呆萌猫咪/index.html","permalink":"https://bingshanyishu.github.io/List/galleries/%E5%91%86%E8%90%8C%E7%8C%AB%E5%92%AA/index.html","excerpt":"","text":""},{"title":"城市风光","date":"2022-02-05T07:49:54.734Z","updated":"2022-02-05T07:49:54.734Z","comments":true,"path":"List/galleries/城市风光/index.html","permalink":"https://bingshanyishu.github.io/List/galleries/%E5%9F%8E%E5%B8%82%E9%A3%8E%E5%85%89/index.html","excerpt":"","text":""},{"title":"清新花卉","date":"2022-02-05T07:49:54.735Z","updated":"2022-02-05T07:49:54.735Z","comments":true,"path":"List/galleries/清新花卉/index.html","permalink":"https://bingshanyishu.github.io/List/galleries/%E6%B8%85%E6%96%B0%E8%8A%B1%E5%8D%89/index.html","excerpt":"","text":""},{"title":"璀璨星空","date":"2022-02-05T07:49:54.736Z","updated":"2022-02-05T07:49:54.736Z","comments":true,"path":"List/galleries/璀璨星空/index.html","permalink":"https://bingshanyishu.github.io/List/galleries/%E7%92%80%E7%92%A8%E6%98%9F%E7%A9%BA/index.html","excerpt":"","text":""},{"title":"甜美食品","date":"2022-02-05T07:49:54.736Z","updated":"2022-02-05T07:49:54.736Z","comments":true,"path":"List/galleries/甜美食品/index.html","permalink":"https://bingshanyishu.github.io/List/galleries/%E7%94%9C%E7%BE%8E%E9%A3%9F%E5%93%81/index.html","excerpt":"","text":""},{"title":"炫酷跑车","date":"2022-02-05T07:49:54.735Z","updated":"2022-02-05T07:49:54.735Z","comments":true,"path":"List/galleries/炫酷跑车/index.html","permalink":"https://bingshanyishu.github.io/List/galleries/%E7%82%AB%E9%85%B7%E8%B7%91%E8%BD%A6/index.html","excerpt":"","text":""},{"title":"自然风景","date":"2022-02-05T07:49:54.737Z","updated":"2022-02-05T07:49:54.737Z","comments":true,"path":"List/galleries/自然风景/index.html","permalink":"https://bingshanyishu.github.io/List/galleries/%E8%87%AA%E7%84%B6%E9%A3%8E%E6%99%AF/index.html","excerpt":"","text":""},{"title":"书籍","date":"2022-01-29T03:34:30.000Z","updated":"2022-02-12T07:40:27.195Z","comments":true,"path":"List/books/index.html","permalink":"https://bingshanyishu.github.io/List/books/index.html","excerpt":"","text":"免费的编程中文书籍索引 免费的编程中文书籍索引，欢迎投稿。 国外程序员在 stackoverflow 推荐的程序员必读书籍，中文版。 stackoverflow 上的程序员应该阅读的非编程类书籍有哪些？ 中文版 github 上的一个流行的编程书籍索引 中文版 如果这个仓库对你有帮助，欢迎 star。如果这个仓库帮你提升了技能找到了工作，可以请我喝杯咖啡： 参与交流欢迎大家将珍藏已久的经典免费书籍共享出来，您可以： 使用 Pull Request 提交 如果你发现了不能访问的链接，也可以提 PR，在无法访问链接的后面增加 :worried:。 贡献者名单: https://github.com/justjavac/free-programming-books-zh_CN/graphs/contributors 目录 语言无关类 操作系统 智能系统 分布式系统 编译原理 函数式概念 计算机图形学 WEB服务器 版本控制 编辑器 NoSQL PostgreSQL MySQL 管理和监控 项目相关 设计模式 Web 大数据 编程艺术 其它 语言相关类 Android APP AWK C/C++ C# Clojure CSS/HTML Dart Elixir Erlang Fortran Go Groovy Haskell iOS Java JavaScript Kotlin LaTeX LISP Lua OCaml Perl PHP Prolog Python R Ruby Rust Scala Shell Swift 读书笔记及其它 测试相关 置顶 [笔记]前端工程师的入门与进阶 💯 [全文]如何正确的学习 Node.js 💯 操作系统 开源世界旅行手册 鸟哥的Linux私房菜 The Linux Command Line (中英文版) Linux 设备驱动 (第三版) 深入分析Linux内核源码 😟 UNIX TOOLBOX Docker中文指南 Docker —— 从入门到实践 Docker入门实战 Docker Cheat Sheet FreeRADIUS新手入门 😟 Mac 开发配置手册 FreeBSD 使用手册 Linux 命令行(中文版) Linux 构建指南 Linux工具快速教程 Linux Documentation (中文版) 嵌入式 Linux 知识库 (eLinux.org 中文版) 理解Linux进程 命令行的艺术 SystemTap新手指南 操作系统思考 返回目录 智能系统 一步步搭建物联网系统 返回目录 分布式系统 走向分布式 返回目录 编译原理 《计算机程序的结构和解释》公开课 翻译项目 返回目录 函数式概念 傻瓜函数编程 返回目录 计算机图形学 OpenGL 教程 WebGL自学网 😟 《Real-Time Rendering 3rd》提炼总结 返回目录 WEB服务器 Nginx开发从入门到精通 (淘宝团队出品) Nginx教程从入门到精通(PDF版本，运维生存时间出品) OpenResty最佳实践 Apache 中文手册 返回目录 版本控制 Git教程 （本文由 廖雪峰 创作，如果觉得本教程对您有帮助，可以去 iTunes 购买） git - 简易指南 猴子都能懂的GIT入门 Git 参考手册 Pro Git Pro Git 中文版 (整理在gitbook上) Git Magic GotGitHub Git权威指南 Git Community Book 中文版 Mercurial 使用教程 HgInit (中文版) 沉浸式学 Git Git-Cheat-Sheet （感谢 @flyhigher139 翻译了中文版） GitHub秘籍 GitHub帮助文档 git-flow 备忘清单 svn 手册 GitHub漫游指南 返回目录 编辑器 exvim–vim 改良成IDE项目 笨方法学Vimscript 中译本 😟 Vim中文文档 所需即所获：像 IDE 一样使用 vim vim 实操教程 Atom飞行手册中文版 Markdown·简单的世界 一年成为 Emacs 高手 Emacs 生存指南 Atom官方手册 返回目录 NoSQL NoSQL数据库笔谈 Redis 设计与实现 Redis 命令参考 带有详细注释的 Redis 3.0 代码 带有详细注释的 Redis 2.6 代码 The Little MongoDB Book The Little Redis Book Neo4j 简体中文手册 v1.8 Neo4j .rb 中文資源 Disque 使用教程 Apache Spark 设计与实现 返回目录 PostgreSQL PostgreSQL 8.2.3 中文文档 PostgreSQL 9.3.1 中文文档 PostgreSQL 9.5.3 中文文档 返回目录 MySQL MySQL索引背后的数据结构及算法原理 21分钟MySQL入门教程 返回目录 管理和监控 ELKstack 中文指南 Mastering Elasticsearch(中文版) ElasticSearch 权威指南 Elasticsearch 权威指南（中文版） Logstash 最佳实践 Puppet 2.7 Cookbook 中文版 返回目录 项目相关 持续集成（第二版） (译言网) 让开发自动化系列专栏 追求代码质量 selenium 中文文档 Selenium Webdriver 简易教程 Joel谈软件 約耳談軟體(Joel on Software) Gradle 2 用户指南 Gradle 中文使用文档 编码规范 开源软件架构 GNU make 指南 GNU make 中文手册 The Twelve-Factor App 返回目录 设计模式 图说设计模式 史上最全设计模式导学目录 design pattern 包教不包会 设计模式 Java 版 返回目录 Web 关于浏览器和网络的 20 项须知 浏览器开发工具的秘密 Chrome 开发者工具中文手册 Chrome扩展开发文档 Grunt中文文档 gulp中文文档 Gulp 入门指南 移动Web前端知识库 正则表达式30分钟入门教程 前端开发体系建设日记 移动前端开发收藏夹 JSON风格指南 HTTP 接口设计指北 前端资源分享（一） 前端资源分享（二） 前端代码规范 及 最佳实践 前端开发者手册 前端工程师手册 w3school教程整理 Wireshark用户手册 一站式学习Wireshark HTTP 下午茶 HTTP/2.0 中文翻译 RFC 7540 - HTTP/2 中文翻译版 http2讲解 3 Web Designs in 3 Weeks 站点可靠性工程 Web安全学习笔记 Serverless 架构应用开发指南 返回目录 大数据 大数据/数据挖掘/推荐系统/机器学习相关资源 面向程序员的数据挖掘指南 大型集群上的快速和通用数据处理架构 数据挖掘中经典的算法实现和详细的注释 Spark 编程指南简体中文版 返回目录 编程艺术 程序员编程艺术 每个程序员都应该了解的内存知识(译)【第一部分】 取悦的工序：如何理解游戏 (豆瓣阅读，免费书籍) 返回目录 其它 OpenWrt智能、自动、透明翻墙路由器教程 SAN 管理入门系列 Sketch 中文手册 深入理解并行编程 程序员的自我修养 Growth: 全栈增长工程师指南 系统重构与迁移指南 返回目录 Android Android Design(中文版) Google Material Design 正體中文版 (译本一 译本二) Material Design 中文版 Google Android官方培训课程中文版 Android学习之路 Android开发技术前线(android-tech-frontier) Point-of-Android Android 一些重要知识点解析整理 Android6.0新特性详解 返回目录 APP Apache Cordova 开发指南 返回目录 AWK awk程序设计语言 awk中文指南 awk实战指南 返回目录 C/C++ C/C++ 中文参考手册 (欢迎大家参与在线翻译和校对) C 语言编程透视 C++ 并发编程指南 Linux C编程一站式学习 (宋劲杉, 北京亚嵌教育研究中心) CGDB中文手册 100个gdb小技巧 100个gcc小技巧 ZMQ 指南 How to Think Like a Computer Scientist (中英文版) 跟我一起写 Makefile GNU make中文手册 (需科学上网) (PDF) GNU make 指南 Google C++ 风格指南 C/C++ Primer (by @andycai) 简单易懂的C魔法 C++ FAQ LITE(中文版) C++ Primer 5th Answers C++ 并发编程(基于C++11) QT 教程 DevBean的《Qt学习之路2》(Qt5) 中文版《QmlBook》 C++ Template 进阶指南 libuv中文教程 Boost 库中文教程 笨办法学C 高速上手 C++11/14/17 返回目录 C# Microsoft Docs C# 官方文档 ASP.NET MVC 5 入门指南 超全面的 .NET GDI+ 图形图像编程教程 .NET控件开发基础 .NET开发要点精讲（初稿） 返回目录 Clojure Clojure入门教程 返回目录 CSS/HTML 学习CSS布局 通用 CSS 笔记、建议与指导 CSS参考手册 Emmet 文档 前端代码规范 (腾讯 AlloyTeam 团队) HTML和CSS编码规范 Sass Guidelines 中文 CSS3 Tutorial 《CSS3 教程》 MDN HTML 中文文档 MDN CSS 中文文档 返回目录 Dart Dart 语言导览 返回目录 Elixir Elixir编程入门 返回目录 Erlang 21天学通Erlang 返回目录 Fortran Fortran77和90/95编程入门 返回目录 Go Go编程基础 Go入门指南 学习Go语言 Go Web 编程 (此书已经出版，希望开发者们去购买，支持作者的创作) Go实战开发 (当我收录此项目时，作者已经写完第三章，如果读完前面章节觉得有帮助，可以给作者捐赠，以鼓励作者的继续创作) Network programming with Go 中文翻译版本 Effective Go Go 语言标准库 Golang标准库文档 Revel 框架手册 Java程序员的Golang入门指南 Go命令教程 Go语言博客实践 Go 官方文档翻译 深入解析Go Go语言圣经(中文版) (GitBook) golang runtime源码分析 Go语言实战: 编写可维护Go语言代码建议 Golang 系列教程(译) Go RPC 开发指南GitBook Go语言高级编程 Go2编程指南 Go语言设计模式 Go语言四十二章经 返回目录 Groovy 实战 Groovy 系列 返回目录 Haskell Real World Haskell 中文版 Haskell趣学指南 返回目录 iOS iOS开发60分钟入门 iOS7人机界面指南 Google Objective-C Style Guide 中文版 iPhone 6 屏幕揭秘 Apple Watch开发初探 马上着手开发 iOS 应用程序 网易斯坦福大学公开课：iOS 7应用开发字幕文件 返回目录 Java Apache Shiro 用户指南 Jersey 2.x 用户指南 Spring Framework 4.x参考文档 Spring Boot参考指南 (翻译中) MyBatis中文文档 MyBatis Generator 中文文档 用jersey构建REST服务 Activiti 5.x 用户指南 Google Java编程风格指南 Netty 4.x 用户指南 Netty 实战(精髓) REST 实战 Java 编码规范 Apache MINA 2 用户指南 H2 Database 教程 Java Servlet 3.1 规范 JSSE 参考指南 Java开源实现及最佳实践 Java 编程要点 Think Java Java 8 简明教程 On Java 8 中文版 (翻译中) Effective Java 第3版中文版 返回目录 JavaScript 现代 Javascript 教程 Google JavaScript 代码风格指南 Google JSON 风格指南 Airbnb JavaScript 规范 JavaScript 标准参考教程（alpha） Javascript编程指南 (源码) javascript 的 12 个怪癖 JavaScript 秘密花园 JavaScript核心概念及实践 (PDF) (此书已由人民邮电出版社出版发行，但作者依然免费提供PDF版本，希望开发者们去购买，支持作者) 《JavaScript 模式》 “JavaScript patterns”中译本 JavaScript语言精粹 命名函数表达式探秘 (注:原文由为之漫笔翻译，原始地址无法打开，所以此处地址为我博客上的备份) 学用 JavaScript 设计模式 (开源中国) 深入理解JavaScript系列 ECMAScript 5.1 中文版 ECMAScript 6 入门 (作者：阮一峰) JavaScript Promise迷你书 You-Dont-Know-JS (深入JavaScript语言核心机制的系列图书) JavaScript 教程 廖雪峰 MDN JavaScript 中文文档 jQuery jQuery 解构 简单易懂的JQuery魔法 How to write jQuery plugin You Don’t Need jQuery 如何实现一个类jQuery？ Node.js Node入门 七天学会NodeJS Nodejs Wiki Book (繁体中文) express.js 中文文档 koa 中文文档 一起学koa 使用 Express + MongoDB 搭建多人博客 Express框架 Node.js 包教不包会 Learn You The Node.js For Much Win! (中文版) Node debug 三法三例 nodejs中文文档 orm2 中文文档 一起学 Node.js underscore.js Underscore.js中文文档 backbone.js backbone.js中文文档 backbone.js入门教程 (PDF) Backbone.js入门教程第二版 Developing Backbone.js Applications(中文版) AngularJS AngularJS最佳实践和风格指南 AngularJS中译本 AngularJS入门教程 构建自己的AngularJS 在Windows环境下用Yeoman构建AngularJS项目 Zepto.js Zepto.js 中文文档 Sea.js Hello Sea.js React.js React 学习之道 React.js 小书 React.js 中文文档 React webpack-cookbook React 入门教程 React 入门教程 (作者：hulufei, 与上行不同作者) React Native 中文文档(含最新Android内容) Learn React &amp; Webpack by building the Hacker News front page impress.js impress.js的中文教程 CoffeeScript CoffeeScript Cookbook The Little Book on CoffeeScript中文版 CoffeeScript 编码风格指南 TypeScipt TypeScript Handbook ExtJS Ext4.1.0 中文文档 Meteor Discover Meteor Meteor 中文文档 Angular-Meteor 中文教程 VueJS 逐行剖析 Vue.js 源码 Chrome扩展及应用开发 Kotlin Kotlin 官方参考文档 中文版 Kotlin 中文文档 GitHub Kotlin 参考文档 《Kotlin for android developers》中文版 返回目录 LaTeX 一份其实很短的 LaTeX 入门文档 一份不太简短的 LATEX 2ε 介绍 （PDF版） 返回目录 LISP Common Lisp ANSI Common Lisp 中文翻譯版 On Lisp 中文翻译版本 Scheme Yet Another Scheme Tutorial Scheme入门教程 Scheme语言简明教程 Racket Racket book 返回目录 Lua Lua编程入门 Lua 5.1 参考手册 中文翻译 Lua 5.3 参考手册 中文翻译 Lua源码欣赏 返回目录 OCaml Real World OCaml 返回目录 Perl Modern Perl 中文版 Perl 程序员应该知道的事 返回目录 PHP PHP 官方手册 PHP调试技术手册(PDF) PHP之道：php-the-right-way (@wulijun版 PHPHub版) PHP 最佳实践 PHP 开发者实践 深入理解PHP内核 PHP扩展开发及内核应用 Laravel5.1 中文文档 Laravel 5.1 LTS 速查表 Symfony2 Cookbook 中文版(版本 2.7.0 LTS) Symfony2中文文档 (未译完) YiiBook几本Yii框架的在线教程 深入理解 Yii 2.0 Yii 框架中文官网 简单易懂的PHP魔法 swoole文档及入门教程 Composer 中文网 Slim 中文文档 Lumen 中文文档 PHPUnit 中文文档 PHP-LeetCode 返回目录 Prolog 笨办法学Prolog 返回目录 Python 廖雪峰 Python 2.7 中文教程 廖雪峰 Python 3 中文教程 简明Python教程 简明 Python 教程(Python 3) 零基础学 Python 第一版 零基础学 Python 第二版 可爱的 Python Python 2.7 官方教程中文版 Python 3.3 官方教程中文版 Python Cookbook 中文版 Python3 Cookbook 中文版 深入 Python 深入 Python 3 PEP8 Python代码风格规范 Google Python 风格指南 中文版 Python入门教程 (PDF) 笨办法学 Python (PDF EPUB) Python自然语言处理中文版 （感谢陈涛同学的翻译，也谢谢 @shwley 联系了作者） Python 绘图库 matplotlib 官方指南中文翻译 Scrapy 0.25 文档 ThinkPython ThinkPython 2ed Python快速教程 Python 正则表达式操作指南 python初级教程：入门详解 Twisted 与异步编程入门 TextGrocery 中文 API ( 基于svm算法的一个短文本分类 Python 库 ) Requests: HTTP for Humans Pillow 中文文档 PyMOTW 中文版 Python 官方文档中文版 Fabric 中文文档 Beautiful Soup 4.2.0 中文文档 Python 中的 Socket 编程 用Python做科学计算 Sphinx 中文文档 精通 Python 设计模式 python 安全编程教程 程序设计思想与方法 知乎周刊·编程小白学Python Scipy 讲义 Python 学习笔记 基础篇 Python 学习笔记 模块篇 Python 标准库 中文版 Python进阶 Python 核心编程 第二版 CPyUG译 Python最佳实践指南 Python 精要教程 Python 量化交易教程 Django Django 1.5 文档中文版 正在翻译中 Django 2.0 文档中文版 Django 最佳实践 Django 2.1 搭建个人博客教程 ( 编写中 ) Django搭建简易博客教程 The Django Book 中文版 Django 设计模式与最佳实践 Django 网站开发 Cookbook Django Girls 學習指南 Flask Flask 文档中文版 Jinja2 文档中文版 Werkzeug 文档中文版 Flask之旅 Flask 扩展文档汇总 Flask 大型教程 SQLAlchemy 中文文档 Flask 入门教程 web.py web.py 0.3 新手指南 Web.py Cookbook 简体中文版 Tornado Introduction to Tornado 中文翻译 Tornado源码解析 Tornado 4.3 文档中文版 返回目录 R R语言忍者秘笈 返回目录 Ruby Ruby 风格指南 Rails 风格指南 笨方法學 Ruby Ruby on Rails 指南 Ruby on Rails 實戰聖經 Ruby on Rails Tutorial 原书第 3 版 (本书网页版免费提供，电子版以 PDF、EPub 和 Mobi 格式提供购买，仅售 9.9 美元) Rails 实践 Rails 5 开发进阶(Beta) Rails 102 编写Ruby的C拓展 Ruby 源码解读 Ruby中的元编程 返回目录 Rust Rust编程语言 中文翻译 Rust Primer 返回目录 Scala Scala课堂 (Twitter的Scala中文教程) Effective Scala(Twitter的Scala最佳实践的中文翻译) Scala指南 返回目录 Shell Shell脚本编程30分钟入门 Bash脚本15分钟进阶教程 Linux工具快速教程 shell十三问 Shell编程范例 Linux命令搜索引擎 返回目录 Swift The Swift Programming Language 中文版 Swift 语言指南 Stanford 公开课，Developing iOS 8 Apps with Swift 字幕翻译文件 C4iOS - COSMOS 返回目录 读书笔记及其它 编译原理（紫龙书）中文第2版习题答案 把《编程珠玑》读薄 Effective C++读书笔记 Golang 学习笔记、Python 学习笔记、C 学习笔记 (PDF) Jsoup 学习笔记 学习笔记: Vim、Python、memcached 图灵开放书翻译计划–C++、Python、Java等 蒂姆·奥莱利随笔 （由译言网翻译，电子版免费） SICP 解题集 精彩博客集合 中文文案排版指北 Standard C 语言标准函数库速查 (Cheat Sheet) Git Cheatsheet Chs GitBook简明教程 制造开源软件 提问的智慧 Markdown 入门参考 AsciiDoc简明指南 背包问题九讲 老齐的技术资料 前端技能汇总 借助开源项目，学习软件开发 前端工作面试问题 leetcode/lintcode题解/算法学习笔记 前端开发笔记本 LeetCode题解 《不可替代的团队领袖培养计划》 返回目录 测试相关"}],"posts":[{"title":"Tableau怎么制作专业图表图","slug":"Tableau怎么制作专业图表","date":"2022-02-04T16:13:48.000Z","updated":"2022-02-05T11:22:45.346Z","comments":true,"path":"posts/220205ba.html","link":"","permalink":"https://bingshanyishu.github.io/posts/220205ba.html","excerpt":"","text":"Tableau怎么制作专业图表一. 统计表1.1 不同种类的图表风格商业周刊的图表风格 经济学人的图表风格 华尔街日报的图表风格 其他媒体的图表风格 1.2 专业图表的特点 1.3 结论风格统一，减少无关修饰 1.4 统计表的基本架构 1.5 图表中的文字设定 注意：在图表中，文字往往处于从属地位，其格式不可喧宾夺主！ 文字的优缺点 缺点：线性阅读，理解速度较慢，量大时容易让人失去耐心 优点：信息密度大，不容易产生歧义 在图表中如何合理利用文字 利用其优点：用简短文字点明页面中心论点（标题或注解均可） 弥补其缺点 让文字变得有美感，让人亲近 通过排版等方式将文字直观、有条理地组织起来，使之更容易理解 控制文字总量，不同级别的大小有层次感 文字的样式 文字的字号 现场演示：保证最后一排观众也能看清正文最小字号 屏幕阅读：界面缩放至60％，应当保证在对角线长度距离外也能看淸楚 打印版本：应当至少使用10磅／五号字号 文字的效果 使用深色背景＋白色文字，或者浅色背景＋黑色文字，然后使用其他颜色作为强调色 尽量不要使用各种图片变色填充和文字特效 行距：1.2－1.5倍可以缓解密集文字的视觉压力 对齐：视情况使用居中对齐、两端对齐 有衬线字体（ Serif） 强调字母笔划的开始及结束，在笔画开始／结束的地方有额外的装饰，而且笔画的粗细会有所不同 突出的是整个word，而非单一字母 ·易读性较高，但排版时容易出现行／列等情况 中文字体很难按此分类严格归类 Garamond：圆润，古典优雅，非常适合显示大量文字 Times new roman：字母宽度差別小，应用范围广，不适合做标题 宋体：使用广泛的印刷体，笔画细，阅读性好，但不适合做标题 SimSun＝宋体， Mingliu＝细明体 无村线字体（ Sans serif）：随印刷业的排版需求发展而来 笔画的粗细差不多，小字体场合更容易阅读 突出的是每一个字母 无衬线字体更加端正大气，往往是商业图表的首选 Arial：平实无个性，但也不会犯错，标题和正文均可使用 黑体：最早的无衬线中文字体，很醒目，但打印效果稍差 雅黑：平实，小字可读性很好，用做标题时冲击力不足 幼圆：比雅黑更细弱一些，更适合于正文 1.6 突破默认设定文字设定 边框设定 二. 统计图2.1 统计图的信息维度 2.2 配色方案2.2.1 从调色板开始 2.2.2 颜色对比 2.2.3 取色法三色组取色 分裂互补三色组 类似取色 调整亮度取色 2.2.3 常见配色方案 纯色 素材选择受限，要求有很高的设计水平和绘图能力 单色 给人谨慎、专业的感觉，商务咨询报告和商务图表报告中常见 双色 较常见的配色方案，商业周刊的红蓝图表最经典 互补色时，冷色做主色，小范围使用暖色做强调色 更常见的是色轮上间隔120°的配色方式，这样对比仍然明显，但更和谐 多色 以四色相的居多 在韩系公司中尤为多见，看起来鲜艳活泼，但实际上重点不突出，很容易 阅读疲劳 2.3 如何定义颜色系 2.3 案例 2.4 自定义颜色 2.5 自定义边界 2.6 自定义形状 2.7 自定义图形框架 三. 仪表板3.1 版面设计四大原则 3.1.1 接近 3.1.2 对齐 3.1.3 重复 3.1.4 对比 3.2 仪表板的设计3.2.1 仪表板的作用 3.2.2 设计的要点 3.2.3 注意点 3.3 实践：冬小麦状况监测3.3.1 需求分析 3.3.2 数据展示工具分析 3.3.3 版面设计需求分析 3.3.4 仪表板需求细化","categories":[{"name":"技能之树","slug":"技能之树","permalink":"https://bingshanyishu.github.io/categories/%E6%8A%80%E8%83%BD%E4%B9%8B%E6%A0%91/"}],"tags":[{"name":"Tableau学习","slug":"Tableau学习","permalink":"https://bingshanyishu.github.io/tags/Tableau%E5%AD%A6%E4%B9%A0/"}],"author":"Sankey"},{"title":"Tableau绘制K线图、布林线、圆环图、雷达图","slug":"Tableau绘制K线图、布林线、圆环图、雷达图","date":"2022-02-02T16:38:48.000Z","updated":"2022-02-13T07:19:42.369Z","comments":true,"path":"posts/220203ab.html","link":"","permalink":"https://bingshanyishu.github.io/posts/220203ab.html","excerpt":"","text":"Tableau绘制K线图、布林线、圆环图、雷达图一. K线图 1.1 导入数据源 1.2 拖拽字段将【日期】托到列这一栏，并将其改为年/月/日类型 将【最低】拖到行这一栏。将【日期】拖到筛选，筛选字段设置为日期范围，日期大体设置为2020/6/11~~2010/9/7（参考范围，可自己设置） 1.3 创建计算字段创建计算字段，名字为高低差，公式为**[最高]-[最低]，创建之后将其拖到标记下的大小，并将将其改成甘特条形图** 1.4 编辑轴分别将【开盘】，【收盘】拖到详细信息，之后编辑轴，设定范围从2300到2800 1.5 做双图创建计算字段，将其命名为收开盘价差，公式为**[收盘]-[开盘]** 将【开盘】拖到行这一栏，将【收开盘价差】拖到标记下总和（开盘）的大小标记下 之后双轴、同步轴 1.6 修改颜色（涨跌）将总和（最低）的大小减小，之后创建计算字段， 名字为涨跌情况，公式为IIF([收盘]&gt;[开盘],’涨’,’跌’)**，将其拖拽到总和（开盘）**下的颜色标记中，并按要求设置颜色，，这里将跌设置为红色，涨设置为蓝色。 最后调整对应坐标轴，标题这些即可 二. 布林线 2.1 导入数据源 2.2 拖拽字段将【日期】拖拽到列这一栏，将其格式设置为天，将【收盘】拖拽到行这一栏，将其度量设置为平均值。将【日期】拖拽到筛选器中，设定筛选范围为2019/5/25~~2020/9/7.. 修改坐标轴范围为最小2000 2.3 创建参数鼠标右键 创建参数 参数名字为移动窗口，数据类型设置为整数，允许的值改为范围，，值范围改为最小值：1，最大值：30，步长：1，，之后显示参数控件 2.4 快速表计算将行上的平均值（收盘）进行移动平均的快速表计算，将其拖到数据-度量中并进行编辑， 修改名字为MA，将其公式中的**-2改为-移动窗口** 之后将MA替换原来的平均值（收盘），再将【收盘】将其拖到坐标轴中 。并重新设置坐标轴范围 2.5 创建SD计算字段与参数创建计算字段，名字为SD，公式为WINDOW_STDEV(AVG([收盘]),-移动窗口,0) 创建参数，名字为SD倍数，，数据类型为浮点，当前值为1，显示格式设置为一位小数，允许的值为范围，最小值为1，最大值为3.。最后创建完毕后显示参数控件。 2.6 创建上轨与下轨创建计算字段，名字为UP，公式为[MA]+[SD倍数]*[SD] 创建计算字段，名字为DOWN，公式为[MA]-[SD倍数]*[SD] 2.7 添加报警设定将度量值下的【收盘】度量改成平均值，拖到最右边，再同步轴，然后去掉这个轴 创建计算字段 名字为是否报警 公式为：IIF(AVG([收盘])&lt;UP AND AVG([收盘])&gt;[DOWN],FALSE,TRUE) 将其拖到标记中的平均值（收盘）中的颜色里，，调节颜色与不透明度，，将平均值（收盘）的不透明度设置为100%，将度量值的颜色设置为50%，再更改各线的颜色，增加美观与辨别度 三. 圆环图 有的版本没有记录数这个字段，这里提供了两种绘制方法，不过思路是一样的。 3.1 导入数据源示例超市 3.2 步骤（有记录数）3.2.1 创建饼图将【类别】拖到标记下的颜色中，将其改成饼图，将记录数拖拽到标记下的角度（要改成饼图后才有） 3.3.2 创建双图将【记录数】拖拽到行这一栏，并再复制一个，将两个【记录数】的度量改成最小值。移除第二个图的类别标记 3.2.3 修改大小将两个图，双轴，再同步轴 将视图改成整个视图，将标记下的最小（记录数）大小调大，标记下的最小（记录数）（2）大小稍微小点，并将其颜色改成白色 3.2.4 添加标签将【类别】、【记录数】拖到标记下的最小（记录数）的标签中，调节字体，字号大小 将【记录数】拖到标记下的最小（记录数）的标签中，调节字体，字号大小，标签再加总数 3.3 步骤（无记录数）3.3.1 创建饼图将【类别】拖到标记下的颜色中，将其改成饼图，将类别拖拽到标记下的角度（要改成饼图后才有），将其度量改成计数 3.3.2 创建双图将【类别】拖拽到行这一栏，并再复制一个，将两个【类别】的度量改成计数。对两者进行快速表计算——排序 移除第二个图的类别标记 3.3.3 其余操作类似四. 雷达图 4.1 导入数据源 转置后更改名称 4.2 创建计算字段（1）创建计算字段： 名字为路径 公式为： CASE [性质] WHEN '易抽取性' then 1 WHEN '粉尘量' then 2 WHEN '分层情况' then 3 WHEN '平整性' then 4 WHEN '厚度' then 5 WHEN '细腻度' then 6 WHEN '柔软度' then 7 WHEN '韧性' then 8 ELSE 9 END （2）创建计算字段， 名字为角度 公式为： IF [路径]=9 THEN 0 ELSE -([路径]-1)*2*PI()/8 END (3)创建计算字段 名字分别为X,Y X：公式：[大小]*COS([角度]) Y：公式：[大小]*SIN([角度]) 4.3 拖拽字段将X拖拽到列这一栏，Y拖拽到行这一栏，将F1拖拽到标记下的颜色中，将其类型有自动改成线，将【路径】拖拽到标记下的路径，，最后将取消聚合度量（菜单栏中的分析—&gt;聚合度量取消打勾） 这时基本雏形就出来了 4.4 添加标签为了使标签位于最外层，可直接在外层点手动加，但显得很LOW，这里才有创建计算字段来生成。 （1）创建计算字段 名字为性质标签 公式为：if [大小]=5 THEN [性质] END （2）创建计算字段 名字为数据标签 公式为： CASE [F1]WHEN '产品A' THEN [大小]WHEN '产品B' THEN [大小]WHEN '产品C' THEN [大小]END （3）拖拽标签 复制行上的Y，创建双图 将【性质标签】拖拽到标记下的总和(Y)(2)中的标签中 将【数据标签】拖拽到标记下的总和(Y)中的标签中，将数据标签类型改成离散，点击标签，勾选允许标签覆盖其他标记复选框 4.5 去除坐标轴将坐标轴去掉，也可添加筛选器来筛选产品，以方便观看。 4.6 调整多余数据，颜色将易抽取性中多余的数据隐藏掉（点击多余的数据，鼠标右键，将标记标签改成从不显示），将5个外围圆的颜色设置为灰色。","categories":[{"name":"技能之树","slug":"技能之树","permalink":"https://bingshanyishu.github.io/categories/%E6%8A%80%E8%83%BD%E4%B9%8B%E6%A0%91/"}],"tags":[{"name":"Tableau绘图","slug":"Tableau绘图","permalink":"https://bingshanyishu.github.io/tags/Tableau%E7%BB%98%E5%9B%BE/"}],"author":"Sankey"},{"title":"Tableau绘制热图、日历图、人口金字塔、标靶图、凹凸图、帕累托图","slug":"Tableau绘制热图、日历图、人口金字塔、标靶图、凹凸图、帕累托图","date":"2022-02-02T16:13:48.000Z","updated":"2022-02-13T07:19:42.763Z","comments":true,"path":"posts/220202ba.html","link":"","permalink":"https://bingshanyishu.github.io/posts/220202ba.html","excerpt":"","text":"Tableau绘图一热图、日历图、人口金字塔、标靶图、凹凸图、帕累托图一.热图 例子：示例超市 可以通过更改颜色来改变颜色的显示情况 二.日历/日历图 数据源：示例超市 按要求修改日期的格式 三.人口金字塔/旋风图 数据源：绘图数据 由于数据源中含有85岁以上的人，不能之间判断。这里可将Age转换为字符串，然后创建计算字段，命名为 年龄=if [Age]='85+' THEN 85 ELSE INT([Age]) END 将年龄创建数据桶 再分别创建以下字段 分别拖字段，以及倒序轴，设置颜色 四. 标靶图 4.1 数据源:示例超市+销售目标从Tableau【帮助】——【示例工作簿】——【示例超市】加载 4.2 步骤：（1）新建一个工作簿 （2）把【销售额】拖到列这一栏，把【订单日期】拖到行这一栏，同时钻取日期为年和月，之后再把【细分】拖到行这一栏（为了图表美观，可【订单日期】拖到筛选器，筛选任意一年的时间，本图表筛选日期为年——2016， （3）切换数据源为销售目标，把销售目标（注意：这里是度量值的销售目标，而非数据源名） （4）为图添加趋势线，点击分析，将参考线拖到单元格，并把值改为【总和(销售目标)】 (5)切换到示例-超市数据源，将度量值【销售额是否超过目标？】拖入到标记中的颜色,此时图表按是否达到目标有不同的颜色，若没有该度量值，可按下列公式计算 （6）为了在与图表互动时能够显示差值，可把【销售额】拖入到详细信息，再把公式编辑成如下第一张图所示。之后点击工具提示，把内容改为如第二张图所示 （7）点击分析，把分布区间拖入到弹出的窗口的单元格中，值可设为40,60,80,填充选取一个颜色，，选择向下填充复选框。 （8）结果——（可按自己要求更改图表配色） 五. 凹凸图 5.1 数据源系统自带示例超市 5.2 步骤（1）打开示例超市数据源 （2）将【订单日期】拖到列这一栏，把【销售额】拖到行这一栏 把【子类别】托到标记中的颜色。 （3）把【销售额】添加快速表计算，之后再编辑快速表计算，计算依据改为特定维度，只勾选【子类别】复选框，大致可以得到凹凸图雏形。 （4）按住CTRL键把销售额往后拖，即复制销售额这一栏，之后把第二个总和（销售额）改为圆，并点击标签，勾选显示标记标签和允许标签覆盖其他标记两个复选框,把对齐中的水平与垂直均设置为居中 （5)之后点击行这一栏的第二个【销售额】的小三角，然后弹出的对话框点击双轴，可得到基本图形了，但仍有不足，线与圆之间不对称，这是由于两个轴不同步引起的。此时可对右侧坐标轴鼠标右键，点击同步轴 （6）调整坐标刻度为倒序，此时排序为1的排到最上面，之后由于坐标轴在凹凸图中没有意义，可把坐标轴隐藏掉。分别对两个轴鼠标右键，去掉显示标题的勾 （7）结果 六. 帕累托图 数据源——示例超市 6.1 基础版（1）连接数据源，新建一个工作簿 （2）将【子类别】拖到列这一栏，将【销售额】拖到行这一栏，之后对【销售额】进行降序排序，即可得到基本的条形图 （3）将按住CTRL的同时把行上的【销售额】往后拖一个，即复制销售额，之后再对第二个销售额快速表计算——汇总 （4）将第二个【销售额】的标记改为线，，之后编辑表计算，在弹出来的对话框中计算依据勾选特定维度，最下面勾选添加辅助计算复选框，在新的辅助计算中从属计算类型选择合计百分比，计算依据改为特定维度 （5）合并双轴，并把第一个【销售额】的标记改为条形图 （6）可为图表添加常量线，便于决策，最后图表如果颜色不美观，还可更改图表颜色——点击标记下的”全部“中的颜色即可。 6.2 复杂版复杂版，即，将横坐标改为百分比递增，而不再是子类别 （1)在基础版的图形上进行更改，将【子类别】拖到标记下的全部的详细信息中，同时将列这一栏的度量改为计数（不同） （2）对列这一栏的子类别进行添加表计算，主要计算类型改为汇总，计算依据改为特定维度，排序顺序改为自定义排序，选择【销售额】，降序排序，并勾选添加辅助计算复选框，从属计算类型改为合计百分比，计算依据改为特定维度 （3）也可为图表添加参考线 (4)结果","categories":[{"name":"技能之树","slug":"技能之树","permalink":"https://bingshanyishu.github.io/categories/%E6%8A%80%E8%83%BD%E4%B9%8B%E6%A0%91/"}],"tags":[{"name":"Tableau绘图","slug":"Tableau绘图","permalink":"https://bingshanyishu.github.io/tags/Tableau%E7%BB%98%E5%9B%BE/"}],"author":"Sankey"},{"title":"Tableau学习Step6一如何制作炫彩地图","slug":"Tableau学习Step6一如何制作炫彩地图","date":"2022-02-02T14:08:59.000Z","updated":"2022-02-13T07:19:40.483Z","comments":true,"path":"posts/220202af.html","link":"","permalink":"https://bingshanyishu.github.io/posts/220202af.html","excerpt":"","text":"Tableau学习Step6——如何制作炫彩地图一.统计地图概述 1.1 统计地图的基本概念 统计地图的本质:数据的正确对应 将数据信息和地理位置严格对应起来,并加以图形呈现 如何将数据和地理位置对应起来? 将数据信息和其所在的地理点/地理区域直接关联起来 将相应信息用适当的图形元素在相应地理点/地理区域加以表示 常见的数据对应方式 ·统计数据和地图数据分表/库存储,用地名关键字将两个数据表进行连接 ·当使用可识别的标准地名关键字时, Tableau中这种连接操作是自动进行的 ·例:“中国”、“ China”均可识别,但“三哥”、“巴铁”就会让 Tableau-脸懵圈 1.2 地图地图的优劣合理运用地图展现数据关系和大小。 同样是展示总销售额和总订单数 二.标准统计地图的绘制 2.1 比例符号地图 2.2 填充地图 2.3 点分布图 2.4 热力图 2.5 蜘蛛图 2.6 动态路径图 2.7 复合统计地图将统计地图与其他统计图层相叠加 统计地图显示主要信息 其他统计图显示主要信息二 最常用的为饼图,其余图形种类非常少见 绘制要点 以双轴图的方式进行图层的叠加 ·进行图层的配色调整,使关键信息更加突出 2.8 地图的编辑和设定 搜索框、界面操作钮等的使用 显示比例尺 图形背景的深浅设置 冲蚀效果 图层和数据层 图层可供用户进行效果微调 ·数据层目前基本上是提供美国范围的数据 三.突破默认的地图框架 3.1 默认无法满足要求 3.2 如何处理非标准名称 3.3 自定义地理信息数据 3.4 基于已有地图添加新层级 1 3.5 基于已有地理单元添加新的地理分层 3.6 使用嵌套地图自动显示省市详情 3.7 如何计算两点间的距离数据格式整理 要求经纬度已在数据集中显式存在以内连接方式关联两两数据点(并去除无意义的同点关联) 将原数据源中的数据取并集，连接方式为**&lt;&gt;** 在数据源中计算出两两点间距离用大圆距离公式计算实际距离(使用地球的平均半径) 创建计算字段：距离，将距离变量设置为维度,公式如下： 3959* ACOS( SIN(RADIANS([lat]))*SIN(RADIANS([lat2]))+ COS(RADIANS([lat]))*COS(RADIANS([lat2]))* COS(RADIANS([long2])-RADIANS([long]))) 在地图中显示出两两点间距离并设定为线标记下的颜色，修改标签显示至合适方式 将距离添加到标签，同时设置标签的只显示距离 双轴，将国际名称添加到标签，合并双轴 为了更好交互，还可将国际名称（直辖市名称1）拖到工具提示，其设置如下 四.炫彩地图DIY 4.1 使用静态背景图片 截取符合需求的图源为静态图片 谷歌地图 Open Street开源地图 测量四个端点的GPS坐标,以取得相应的横纵轴尺度范围 设定相应图片为地图的背景图像,设定纵横轴相对应的变量,以及变量的取值范围 取消背景地图的显示 根据显示效果调整纵横轴尺度,以使数据和背景地图准确匹配 （1）截取背景图片 （2）取左上角与右下角经纬度坐标 （3）载入图片 4.2 使用自定义图片方法同4.1，不断调试 4.3 绘制多边形地图与如何采集 采集封闭多边形各个连续端点的经纬度坐标 同时记录各连续端点的绘制顺序 如果同一区域被分为多个独立多边形,则分别绘制,并取相同名称/D号即可 为便于管理,应当为每个区域提供不同的subd 将经度、纬度变量指定为正确的地理角色 要求绘制多边形图形,并将绘制顺序变量设定为路径 名称D变量用于区分不同地理区域, subid则辅助绘制不同的区域 推荐在线工具 https://drawingtool.powertoolsfortableau.com https://tableaudraw.com/ 4.使用外部地理空间文件 5.使用在线地图服务","categories":[{"name":"技能之树","slug":"技能之树","permalink":"https://bingshanyishu.github.io/categories/%E6%8A%80%E8%83%BD%E4%B9%8B%E6%A0%91/"}],"tags":[{"name":"Tableau学习","slug":"Tableau学习","permalink":"https://bingshanyishu.github.io/tags/Tableau%E5%AD%A6%E4%B9%A0/"}],"author":"Sankey"},{"title":"Tableau学习Step5一表计算、详细级别表达式、动作、外接python","slug":"Tableau学习Step5一表计算、详细级别表达式、动作、外接python","date":"2022-02-02T14:07:59.000Z","updated":"2022-02-13T07:19:41.009Z","comments":true,"path":"posts/220202ae.html","link":"","permalink":"https://bingshanyishu.github.io/posts/220202ae.html","excerpt":"","text":"Tableau学习Step5一表计算、详细级别表达式、动作、外接python一. 表计算1.1 什么是表计算 是特殊类型的计算字段 根据当前的可视化内容（基于当前内容构建的虚拟表）进行计算，如排名、汇总、差分、定基比/环比……. 表计算并不考虑当前可视化内容中被筛选掉的任何度量或维度 表计算的结果并不影响数据源中的数据表 1.2 分区与寻址 分区字段 用于定义计算组方式(确定执行表计算所针对的数据范围)的维度 分区字段将视图拆分成多个子视图(或子表),系统在每个分区内单独执行表计算 寻址字段 执行表计算所需要使用的其余维度 用于确定计算时的移动方向 横穿(从左到右) 向下(从上到下) 横穿,然后向下 向下,然后横穿 1.2.1 横穿 VS 向下 1.2.2 横穿,然后向下 VS 向下,然后横穿 1.2.3 加入分区维度 1.2.4 单元格内计算与特殊级别 1.3 表计算常见类型 1.4 如何创建表计算1.4.1 快速表计算 1.4.2 自定义表计算 1.4.3 计算新变量方式添加表计算(1) (2) 二. 详细级别表达式2.1 表达式级别 2.2 什么是详细级别表达式 2.3 FIXED 2.4 INCLUDE 2.5 EXCLUDE 2.6 全表范围LOD表达式的类型:全表范围 2.7 注意事项 三. 动作3.1 集动作 集动作使得用户在与可视化项或仪表板交互时可以直接更改集值 为集分配值、将值添加到集、从集中移除值 集动作的一般步骤 创建一个或多个集 创建一个集动作,该动作使用某一个集 可选:创建使用集的计算字段 构建一个可视化项,该可视化项使用集动作所引用的集 测试并修改集动作 3.1.1 选择性数据下钻展示 步骤： 3.1.2 动态切换标色 3.2 参数动作 四. 外接Python4.1 直接外接Python 按 tableau调用的数据格式编写 python代码 import numpy as np #传入时使用单个值或者lst a=[1,23,4] b=[5.6,7,8] #传出时为lst np. add(np array(a), np array (b)). tolisto 如何在tableau中调用tably SCRIPT BOOL/INT/REAL/STRO 需要调用的 python代码\",依次给出使用的参数列表 )# python代码中,参数依次用_arg1,arg2.进行标识 SCRIPT REAL( import numpy as np return np. add(np array( arg 1), np array( arg2 ). tolisto) avg(现状指数]),avg(预期指数] ) 注意：在 tableau中调用 tabby针对的是表计算级别! 因此计算中完全适用寻址和分区概念 传送入 python的数据是以每个单元格为单位先进行汇总 Tableau会对每个分区调用一次分析扩展程序,因此传入数据时会按分区形成数据序列 由于是按照分区进行调用,因此需要注意计算量 4.2 python预定义环境加载 from tabpy tabpy tools client import Client client=Client(http://localhost:9004/) 定义函数 import numpy as np def ado(x,y):#由于要在 tableau中使用函数结果,函数必须要有 return值 return np. add(np array(x), nparray(y). tolisto 部署函数 client deploy (addo, add, 'Adds two numbers x and y) 在 python环境中测试函数 res client query (addo, a, b） 在 tableau中调用预定义函数 SCRIPT REAL( return tabpy query (addo, arg1, arg2)Response] avg(现状指数]),ag([预期指数] 再次强调:在 tableau中调用 tabby针对的是表计算级别 当沿着表横穿时,会将该行单元格汇总结果形成list进行传送,那么考虑一下它是如何实现计算的? SCRIPT REAL( import numpy as np return np corrcoef( arg1, arg2)[0, 1 avg(现状指数]),avg(顶预期指数])","categories":[{"name":"技能之树","slug":"技能之树","permalink":"https://bingshanyishu.github.io/categories/%E6%8A%80%E8%83%BD%E4%B9%8B%E6%A0%91/"}],"tags":[{"name":"Tableau学习","slug":"Tableau学习","permalink":"https://bingshanyishu.github.io/tags/Tableau%E5%AD%A6%E4%B9%A0/"}],"author":"Sankey"},{"title":"Tableau学习Step4一数据解释、异常值监测、参数使用、分析结果如何对外发布","slug":"Tableau学习Step4一数据解释、异常值监测、参数使用、分析结果如何对外发布","date":"2022-02-02T14:06:59.000Z","updated":"2022-02-05T07:49:54.821Z","comments":true,"path":"posts/220202ad.html","link":"","permalink":"https://bingshanyishu.github.io/posts/220202ad.html","excerpt":"","text":"Tableau学习Step4一数据解释、异常值监测、参数使用、分析结果如何对外发布一. 前言 本教程通过一个案例从浅到深来学习Tableau知识 1.1 消费者信心指数定义消费者信心( Consumer Confidence or Consumer Sentiment)是指消费者根据国家或地区的经济发展形势,对就业、收入、物价、利率等问题综合判断后得出的一种看法和预期·居民在决策家庭的开销,特别是购买诸如住宅、汽车等耐用商品时,是经过深思熟虑才决定的。不仅是以目前的经济条件为基础,同时结合了对未来收入、就业、物价、利率变动等因素的判断和预期理论体系最早由美国密歇根大学调查研究中心的乔治-卡通纳( GeorgeKatona)在上世纪40年代后期提出六十多年的时间己经充分验证了上述理论在解释宏观经济现状时的有效性与合理性 1.2 中国消费者信心指数的需求 中国经济的重要性逐渐增高 国外对中国官方统计数据的质疑持续存在 地方数据和全国数据的较大差异 过高和过低数据时的修正(这个全世界其实都一样) 官方统计信息对于商业分析需求的匹配度较差 第三方数据:一大堆烂番茄! 1.3 指数研究方法调研的研究方法 1.4 中国消费者信心指数研究问卷 指数值的计算方法 1.5 分析需求 数据源可直接增添每月的新数据,且相应的图表均可分月浏览 对个体信心值中的异常值进行监测 展示不同群体的信心指数差异,并在图形中加汇参考线辅助分析 使用适当的工具展示开放题细节特征 二. 为数据源添加数据2.1 替换数据源 2.2 并集追加 2.3 提取后追加 添加只有一个工作表的数据源 三. 数据解释自动分析 四. 异常值监测4.1 参考线与参考区间对个体信心值中的异常值进行监测 单纯的直方图或者箱图并不能完全满足需求,需要考虑将其和点图、参考线等工具相结合 点图 常量、单值、区间和分布 填充方向和颜色渐变 百分位数 箱图 屏蔽正常范围的数据散点 4.2 箱图 五. 使用参数 六. 其余统计分析 七. 分析结果的对外发布 7.1 离线打包工作薄与打包工作簿，后者包括数据源 7.2 在线发布 八. 图表模板的应用直接替换数据源","categories":[{"name":"技能之树","slug":"技能之树","permalink":"https://bingshanyishu.github.io/categories/%E6%8A%80%E8%83%BD%E4%B9%8B%E6%A0%91/"}],"tags":[{"name":"Tableau学习","slug":"Tableau学习","permalink":"https://bingshanyishu.github.io/tags/Tableau%E5%AD%A6%E4%B9%A0/"}],"author":"Sankey"},{"title":"Tableau学习Step3一数据的连接与基本图形的制作","slug":"Tableau学习Step3一数据的连接与基本图形的制作","date":"2022-02-02T13:06:59.000Z","updated":"2022-02-13T07:19:41.415Z","comments":true,"path":"posts/220202ac.html","link":"","permalink":"https://bingshanyishu.github.io/posts/220202ac.html","excerpt":"","text":"Tableau学习Step3一数据的连接与基本图形的制作一. 前言 本教程通过一个案例从浅到深来学习Tableau知识 案例概述 Northwind公司的数据库架构 二. 商业理解 三. Tableau中的数据连接和数据源3.1 数据连接 3.2 数据源 3.3 数据模型数据表 数据库中存储数据的具体实现方式,有真实的物理存储空间 可以通过对表的操作来实现用户对数据的操作 数据视图 通过数据表间的逻辑关系,通过代码来将一些表中的数据进行连接整理后形成的一个逻辑表 视图在物理存储上并不存在,所有的数据都来自于对相关表的读取 对视图中数据的改变(如果允许的话)都直接是对源数据表内容的修改 优点:减少冗余数据,节省空间 缺点:功能受限,读写效率度,用不到的数据也必须进行逻辑拼接 在2020年2月，Tableau在数据底层对其数据模型进行了重大的更新，主要分为了物理层和逻辑层 如今Tableau在多表数据时的处理方式 3.4 基于SQL的多表关联可自定义SQL查询，编写了所需要的数据的SQL语言，大大简化了Tabeau直接对数据处理的方便性。 3.5 多数据源的融合不同的表可进行相互关联，实现不同表的数据的连接 3.6 远程数据的提取与保存3.6.1 接口差异Desktop版和 Public版的数据接口差异 3.6.1 文件类型Tableau常见的数据类型 四.Top监测表的制作4.1 数据表汇总方式分别将公司名称，地区，城市，地址，客户ID拖到行，将total拖入到列 4.2 数据提取汇总方式实时提取数据当数据源改变后，Tableau里连接的数据也会发生改变 若采用数据提取则当数据源改变后，Tableau里的连接的数据源也不会发生改变 4.3 筛选器Tableau中的筛选器 4.4 参数 五.近一步的分析需求需求 对Topn客户的订单情况做历史数据的深入考察 在名单中加入总金额未达到Topn,但总订单数较多的客户，如历史订单数&gt;=15 对上述信息形成动态监测界面,便于分析和观察 细化 5.1 刻度值的编辑操作 5.2 多个汇总值的考查 5.3 维度分层与维度钻取 5.4 集合的使用 5.5 绘制统计地图 5.6 构建仪表板","categories":[{"name":"技能之树","slug":"技能之树","permalink":"https://bingshanyishu.github.io/categories/%E6%8A%80%E8%83%BD%E4%B9%8B%E6%A0%91/"}],"tags":[{"name":"Tableau学习","slug":"Tableau学习","permalink":"https://bingshanyishu.github.io/tags/Tableau%E5%AD%A6%E4%B9%A0/"}],"author":"Sankey"},{"title":"Tableau学习Step2一数据文件的读取与统计图、表的概述","slug":"Tableau学习Step2一数据文件的读取与统计图、表的概述","date":"2022-02-02T13:06:48.000Z","updated":"2022-02-13T07:19:41.799Z","comments":true,"path":"posts/220202ab.html","link":"","permalink":"https://bingshanyishu.github.io/posts/220202ab.html","excerpt":"","text":"Tableau学习Step2一数据文件的读取与统计图、表的概述 一. 前言 本教程通过一个案例从浅到深来学习Tableau知识 案例概述： 二. 文件读取2.1 数据结构 统计分析方法,都是以关系型数据库的二维表作为基本数据结构的 2.2 标准格式文件读取 2.3 非标准文件读取 2.4 数据透视表读取 2.5 并集文件与拼接文件 三. 编辑和整理数据3.1 基本的数据整理操作 名称与重命名 更改数据类型: 数值、日期、字符、逻辑 字符型变量 别名 数值拆分 数值型变量 数值分段(创建级) 创建 新变量 数据组 隐藏数据列 例：可使用创建计算字段来拆分列，如下图 SPLIT函数按逗号来拆分name行 四.维度与度量 五.统计表的基本类型5.1 表格的基本框架 5.2 表格绘制的基本步骤 5.3 叠加表 5.4 交叉表 5.5 嵌套表 5.6 多层表 5.7 复合表格 六.泰坦尼克号数据的表格化分析6.1 性别 6.2 舱位舱位操作同性别 6.3 交叉表分析 七.统计图的的基本类型7.1 统计图的分类框架 统计图的分类方法有许多种,但作为数据分析和呈现的工具,最好使用和统计学体系最为贴近的方法对其加以分类 首先按照其呈现变量的数量,将统计图大致分为单变量图、双变量图、多变量图等 随后再根据相应变量的测量尺度进行更细的区分 Tableau中提供了一些新式的图形,他们并不完全符合标准的统计绘 图要求,对这些图形的使用应当谨慎,注意不要因此冲淡分析主题 7.2 单个—分类变量 7.3 单个—数据变量 7.3.1 直方图 7.3.2 箱图 7.4 数据因变量 7.4.1 条图 7.4.2 点图 7.4.3 线图 7.5 分类因变量 7.6 组合图 注：以上内容为报名的Tableau课程笔记，仅作为个人复习自用。如有侵权，请联系删除","categories":[{"name":"技能之树","slug":"技能之树","permalink":"https://bingshanyishu.github.io/categories/%E6%8A%80%E8%83%BD%E4%B9%8B%E6%A0%91/"}],"tags":[{"name":"Tableau学习","slug":"Tableau学习","permalink":"https://bingshanyishu.github.io/tags/Tableau%E5%AD%A6%E4%B9%A0/"}],"author":"Sankey"},{"title":"Tableau学习step1一Tableau概述","slug":"Tableau学习step1一Tableau概述","date":"2022-02-02T13:06:48.000Z","updated":"2022-02-05T07:49:54.823Z","comments":true,"path":"posts/220202aa.html","link":"","permalink":"https://bingshanyishu.github.io/posts/220202aa.html","excerpt":"","text":"Tableau学习step1一Tableau概述一.Tableau优缺点优点 ·简单易用,只要是会用 EXCEL,几分钟就可掌握 Tableau的基本用法 急速高效 ·结果美观 ·轻松整合原始数据 ·高度交互 缺点 ·对统计数据文件的读取仍需改进 ·缺乏对数据深入分析和建模的能力 不免费 二.Tableau的产品线划分 2.1 Tableau Prep Builder（1）Tableau Prep Builder​ 用数据流的形式整理和清理数据 （2）Tableau Prep Conductor​ 在服务器环境中将数据自动化 2.2 Tableau Reader(免费) PC端结果浏览，免费使用 类似于Acrobat Reader 提供对已打包文件的浏览，动态交互能力，但不能作进一步的编辑操作 2.3 Tableau Public(免费) PC端编辑，web端存储，免费使用 提供基本的数据连接，和完整的展示，分析功能 不能读取远程数据库，不能将结果保存为本地文件（只能在web上公开发布） 2.4 Tableau Desktop提供完整的数据连接，展示，分析功能，并可将结果保存为本地文件，或直接发布至Server端 2.5 Tableau Server 服务器版本 可在本地或者云服务器上部署 可通过Desktop连接并上传已完成的可视化结果 通过浏览器界面直接使用，并实现在Desktop中几乎所有功能 2.6 Tableau Online Server的云托管版本 是SaaS形式的Tableau Server,带有由Tableau完全托管的维护，升级和安全性服务 2.7 Tableau Mobile 移动端APP，免费使用 为移动客服端提供完整的数据连接，展示，分析功能 必须结合Server才能使用（实际上是直接连接至Server) 三.Tableau的安装与激活Tableau官网下载：商业智能和分析软件 (tableau.com) 安装失败方法：Tableau 在Windows环境下安装失败的处理 – 喜乐君 (yupengwu.com) 安装之后重启 打开后 学生可免费申请一年使用 注：以上内容为报名的Tableau课程笔记，仅作为个人复习自用。如有侵权，请联系删除","categories":[{"name":"技能之树","slug":"技能之树","permalink":"https://bingshanyishu.github.io/categories/%E6%8A%80%E8%83%BD%E4%B9%8B%E6%A0%91/"}],"tags":[{"name":"Tableau学习","slug":"Tableau学习","permalink":"https://bingshanyishu.github.io/tags/Tableau%E5%AD%A6%E4%B9%A0/"}],"author":"Sankey"},{"title":"Tableau绘制漏斗图、甘特图、瀑布图、镶边面积图、阴影坡度图","slug":"Tableau绘制漏斗图、甘特图、瀑布图、镶边面积图、阴影坡度图","date":"2022-02-02T13:06:48.000Z","updated":"2022-02-05T07:49:54.824Z","comments":true,"path":"posts/220203aa.html","link":"","permalink":"https://bingshanyishu.github.io/posts/220203aa.html","excerpt":"","text":"Tableau绘制漏斗图、甘特图、瀑布图、镶边面积图、阴影坡度图一. 漏斗图 数据源 1.1 分色直条漏斗图（1）导入数据 （2）将【数量】拖到行这一栏，将【阶段】拖到标记下的颜色选项卡吗，之后对数量进行降序排列。 （3)把【数量】拖到标记下的大小选项卡，视图设置为整个视图 （4）把【阶段】，【数量】拖到标签选项卡，并对数量进行快速表计算——合计百分比。 （5）下面的图形由于太少而导致无法显示标签，对此可手动的选择，添加注释。（当然，为了美观，也可以选择不加） 1.2 同色斜边框漏斗图（1）导入数据 （2）将【数量】拖到行这一栏，将【阶段】拖到标记下的颜色选项卡吗，之后对数量进行降序排列。并将“标记”下的自动改为区域 （3）重复列一栏的【数量】，并将左边图的坐标轴倒序 （4）将图表颜色不透明度改成100%，鼠标右键设置格式，将边界的列分隔符改成无 （5）去掉坐标轴，并为图表添加标签，左侧添加【阶段】，右侧添加【数量】的百分比。并调整相应得大小，位置。 1.3 分条彩色漏斗图（1）导入数据 （2）将【数量】拖到行这一栏，将【阶段】拖到标记下的颜色选项卡吗，之后对数量进行降序排列。把【阶段】拖到标记下得颜色。 （3）复制【数量】这一栏，将【数量2】标记下的自动改为线，【数量1】标记下的自动改为条形图，并合并双轴，再同步轴 （4）同理，再做一个相同的图形 （5)将第一个图形的轴倒序，并对图形鼠标右键——设置格式，将边界下的列分隔符改成无（以去掉合并图形中间的线），之后再去掉图形的坐标轴。 （6）将【阶段】拖到【数量2】的标记下的标签中，【数量】拖到【数量4】的标记下的标签中。并快速表计算——合计百分比。调整相应的大小，位置。 （7）如果不想要边缘的线，也可以删除两个线图所对应栏的【数量】，然后添加标签，并将此时标签左侧图设置为偏右/中，右侧图设置为偏左/中，添加相应位置，大小。(注:如果不设置，会导致标签使图形压缩) 二. 甘特图 (1).导入数据源 (2).拖拽字段 1.将【实际开始日期】拖到列这一栏，并将其设置为度量的日。 2.将【阶段】，【项目名称】拖到行这一栏。将【实际用天】拖到大小这一栏（如何没有这个度量值），可通过创建计算字段来计算。 (3).添加参考线/区间 1.分别将【实际开始日期】，【实际完成日期】，【计划开始日期】，【计划完成日期】拖到标记下的详细信息，并将其全部设置为度量的日。 2.添加参考线，设置如下 3.也可添加参考区间。 (4).图表变色 接下来可以按照具体要求制作 1.如果想要图表显示出负责人，可之间将【负责人】拖到颜色 2.如果想要图表表示出完成情况而显示相应的颜色 可创建计算字段，并将其拖到颜色。 三. 瀑布图 (1)导入数据源 示例超市 (2)字段拖拽 将【利润】拖到行这一栏上，【子类别】拖到列这一栏上，按利润从小到大排列，并将标记下的自动改成甘特条形图。 (3)汇总指标 将【利润】快速表计算——汇总 (4)创建计算字段 为了得到直条的长度，这里计算负值的【利润】值，并将其拖到大小 (5)添加标签/色彩 (6)添加行总计 四. 镶边面积图 (1)导入数据源 示例超市 (2)拖拽字段 将【订单日期】拖拽到列这一栏。，【销售额】拖拽到列这一栏。【类别】拖拽到标记下的颜色。 (3)创建计算字段 销售额_办公用品 销售额_家具 销售额_技术 (4)合并字段 将【销售额_办公用品]拖到行这一栏，【销售额】的后面 将标记下的 总和【销售额_办公用品】中的类别去掉 将【销售额_家具】拖到销售额_办公用品图的前面 将【销售额_技术】拖到标记下的度量值中 (5)调节顺序和标记 对应顺序就是面积图的顺序 (6)更改公式 将标记下的总和（销售额_技术）的公式更改为 SUM([销售额_技术])+SUM([销售额_家具]) 将标记下的总和（销售额_办公用品）的公式更改为 SUM([销售额_办公用品])+SUM([销售额_技术])+SUM([销售额_家具]) 之后双轴，再同步轴。 最后按自己需求更改标签颜色这些 五. 阴影坡度图 (1)导入数据源 示例超市 (2)拖拽字段 将【订单日期】拖拽到列这一栏。，【销售额】拖拽到列这一栏。【类别】拖拽到标记下的颜色。 (3)创建计算字段 销售额_办公用品 销售额_家具 (4)合并字段 将【销售额_办公用品]拖到行这一栏，【销售额】的后面 将标记下的 总和【销售额_办公用品】中的类别去掉 将【销售额_家具】拖到销售额_办公用品图的前面 之后将标记下的度量值改成区域，调整总和（销售额_办公用品）与总和（销售额_家具的位置。 (5)更改公式 将标记下的总和（销售额_家具）的公式更改为 SUM([销售额_家具])-SUM([销售额_办公用品]) 之后双轴，再同步轴。 (6)更改颜色 将销售额_办公用品更改为白色 最后再自由调整即可","categories":[{"name":"技能之树","slug":"技能之树","permalink":"https://bingshanyishu.github.io/categories/%E6%8A%80%E8%83%BD%E4%B9%8B%E6%A0%91/"}],"tags":[{"name":"Tableau绘图","slug":"Tableau绘图","permalink":"https://bingshanyishu.github.io/tags/Tableau%E7%BB%98%E5%9B%BE/"}],"author":"Sankey"},{"title":"博客搭建","slug":"博客搭建","date":"2022-01-31T13:06:48.000Z","updated":"2022-02-05T07:49:54.826Z","comments":true,"path":"posts/f3fb008f.html","link":"","permalink":"https://bingshanyishu.github.io/posts/f3fb008f.html","excerpt":"","text":"博客搭建前言：博客框架介绍参考搭建博客、自己的小窝？快来看看这些开源静态网站生成器_灵魂画师牧码-CSDN博客 1. Hexo GitHub 仓库：https://github.com/hexojs/hexo Stars 数量：29.6k 官方网站：https://hexo.io Hexo 使用 Node.js 开发，很流行。它有数以百计的主题和插件，支持 GFM（GitHub Flavored Markdown），只需要一条命令也能将 Hexo 网站部署到 GitHub Pages、Heroku 等平台上。目前 Vue.js 的官方文档就由它驱动着。不过 Hexo 的速度对比其他框架而言，并不算非常快。 hexo原理hexo是怎么工作的 | 把生命浪费在美好的代码上 (coderunthings.com) hexo原理浅析 - SegmentFault 思否 2. Hugo GitHub 仓库：https://github.com/gohugoio/hugo Stars 数量：41.9k 官方网站：https://gohugo.io/ Hugo 使用 Go 语言开发，号称”世界上最快的网页生成器“。Stars 数量远高于 Hexo。目前有三百多个主题。 3. VuePress GitHub 仓库：https://github.com/vuejs/vuepress Stars 数量：15.6k 官方网站：https://vuepress.vuejs.org/zh/ VuePress 在一众生成器之中算是一个”后起之秀“，起初由尤雨溪牵头开发。等发展到一定程度之后，将会取代 Hexo 成为 Vue.js 官方文档的生成器。它基于 Vue，可以在 Markdown 中使用 Vue 组件，又可以使用 Vue 来开发自定义主题。 4. MkDocs GitHub 仓库：https://github.com/mkdocs/mkdocs Stars 数量：9.1k 官方网站：http://www.mkdocs.org/ MkDocs 使用 Python 开发，更偏向于文档生成。用户不是特别多，只有十几个主题。 5. Gatsby GitHub 仓库：https://github.com/gatsbyjs/gatsby Stars 数量：42.5k 官方网站：https://www.gatsbyjs.org/ Gatsby 作为 GitHub 上面 #static-site-generator 话题最多 Star 数量的项目，基于 React。它超越了静态网站，更强大。可以从任何地方加载数据。 6. Docsify GitHub 仓库：https://github.com/docsifyjs/docsify Stars 数量：12.6k 官方网站：https://docsify.js.org/ Docsify 同样基于 Vue，偏向于文档，动态生成网页，最大的特点是它只有一个 index.html，在你打开网页的时候才开始生成。Docsify 还兼容 IE 11。缺点是对 SEO 并不太友好。 7. Jekyll GitHub 仓库：https://github.com/jekyll/jekyll Stars 数量：39.8k 官方网站：https://jekyllrb.com/ Jekyll 使用 Ruby 开发，它足够简单，能够让你专注于内容。它有将近四百种主题和两百多个插件，光这两项就足以证明它的优秀。 一. 安装Git工具下载地址： Git官网下载：https://git-scm.com/ 国内镜像下载：https://npm.taobao.org/mirrors/git-for-windows/v2.22.0.windows.1/Git-2.22.0-64-bit.exe 国内其他版本下载：https://npm.taobao.org/mirrors/git-for-windows/ 建议使用国内镜像下载，速度最快！ ps:我自己用了官网下载，下载了20多分钟 下载后请安装请参考这篇文章 Windows系统Git安装教程（详解Git安装过程） 装完成后在命令提示符中输入git –version验证是否安装成功 git --version 二. 安装Node.js Node.js 是一个开源和跨平台的 JavaScript 运行时环境。 它几乎是任何类型项目的流行工具！ Node.js是一个事件驱动I/O服务端JavaScript环境，基于Google的V8引擎，V8引擎执行Javascript的速度非常快，性能非常好。 Download | Node.js (nodejs.org)这个网站直接进去下载就行 具体安装教程可参考这篇文章 nodejs下载安装及配置环境 可通过命令行进行查看是否安装成功，打开命令提示符，输入node -v和npm -v，如果出现版本号，那么就安装成功了。如下图 因为node.js用的是国外的网站，为了提高下载速度，可使用国内淘宝镜像的方法。 命令 npm config set registry https://registry.npm.taobao.org 验证命令 npm config get registry 如果返回https://registry.npm.taobao.org，说明镜像配置成功。 三. 安装HexoHexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页 官网文档 | Hexo 在你的某个磁盘中创建一个空的文件 比如我的这里是D/HexoBlog，以后所有的git命令都要在这个文件夹里面运行 在该文件夹下点击 Git Bash Here，输入以下 npm 命令即可安装 $ npm install hexo-cli -g 输入hexo -v即可检验是否安装成功，我这里就不演示了。 具体参考： φ(゜▽゜*)♪咦，又好了！ (yshawlon.cn) (5条消息) 使用 Hexo 搭建静态个人博客与绑定个人域名_bwqiang的博客-CSDN博客 安装好后初始化， $ hexo init 分别执行 $npm install 执行npm install之后 以上如果报错就多运行几次，可能是网络不好，比如我下面的错误 执行hexo g：生成页面文件，也就是一些html,css，js文件，这样打开就是一个渲染好的网站 浏览器，输入网站，localhost:4000,就可以看到初步的本地博客，以后优化博客都要先本地看，再上传到github 四. 创建Github仓库 没有GitHub账号的先注册一下 https://github.com/join，很简单。不会就去网上搜 创建repository。右上角 加号 New repository。 注意：repository名字必须是自己 GitHub 账户名，否则出现 404 错误。 我这里以及弄好了，没有截图，仓库名字就是你的github名字.github.io, 比如我的 bingshanyishu.github.io 这里借别人的图用一下，谢谢 注意：下面readme也要勾选， 最后就创建成功了。 后面上传博客还需要注册令牌： 点击settings 找到了再点击developer settings 点击personal access token 然后点击创建token， note可以随便命名，expiration建议勾选no expiration,意思就是没有时间限制。最后生成令牌，保存好令牌，后面用，最好单独保存，因为令牌只能看一次，也就是注册这次，以后都不能看令牌了。 五. 上传到github仓库5.1 _config.yml修改找到在D:\\HexoBlog下的_config.yml文件，然后打开，我这里使用vscode打开，也可以用记事本打开。 找到： # Deployment ## Docs: https://hexo.io/docs/deployment.html deploy: type: 修改后：（注意：后面冒号的值需要有一个空格） # Deployment ## Docs: https://hexo.io/docs/deployment.html deploy: type: git repository: 自己的仓库地址如下图，直接复制粘贴 //自己的仓库地址 branch: main 5.2 生成ssh右键单击鼠标，点击 Git Bash Here输入以下命令：（第一次使用需要），后面不需要了 git config --global user.name \"Name\" git config --global user.email \"Email\" name是你的github名字，email是你注册github的地址。 生成密钥： 再输入，email是你的github邮箱 ssh-keygen -t rsa -C \"Email\" 按下四次enter后，就可以得到ssh了 复制ssh 找到c盘，用户，个人账户文件下的.ssh文件 例如我的路径：C:\\Users\\27532\\.ssh，27532，和你们不一样 打开id_rsa.pub文件打开，后直接Ctrl+A,Ctrl+C。就复制好了ssh密钥。 5.3 绑定github打开github，点击头像，再点击settings,找到SSH and GPG keys点击 新建SSH，title可以随便取，Key粘贴刚才复制的**.ssh**文件内容 最后点击add ssh key即可 5.4 本地连接github你的博客文件夹下，右键单击鼠标，点击 Git Bash Here输入以下命令，如果如下图所示，出现你的用户名，那就成功了 ssh -T git@github.com 这样就将git与github仓库连接起来了 5.5 上传你的博客文件夹下，右键单击鼠标，点击 Git Bash Here输入以下命令 npm install hexo-deployer-git --save 这样以后可直接通过命令上传博客 最后点击 Git Bash Here输入以下命令 hexo g hexo d 输入hexo d 后第一次会弹出github对话框，然后点击token，输入刚才产生的令牌就可以将其本地的文件上传到github 最后输入网址http://bingshanyishu.github.io/ 即可查看网址了 注意：每次修改本地文件后。 每次使用命令时，都要在D:\\HexoBlog目录下。 hexo cl hexo g hexo s //本地查看 hexo d //上传到github 六. 参考Github + Hexo 搭建个人博客超详细教程_feezxe的博客-CSDN博客 使用 Hexo 搭建静态个人博客与绑定个人域名_bwqiang的博客-CSDN博客 基于Hexo的matery主题搭建博客并优化_悟尘修行记-CSDN博客_hexo matery","categories":[{"name":"项目之树","slug":"项目之树","permalink":"https://bingshanyishu.github.io/categories/%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%A0%91/"}],"tags":[{"name":"Blog","slug":"Blog","permalink":"https://bingshanyishu.github.io/tags/Blog/"}],"author":"Sankey"},{"title":"hexo部署到github时，提示typeError","slug":"hexo部署到github时，提示typeError [ERR_INVALID_ARG_TYPE] The “mode“ argument must be integer. Receive","date":"2022-01-30T16:00:00.000Z","updated":"2022-02-05T07:49:54.825Z","comments":true,"path":"posts/4b2340a4.html","link":"","permalink":"https://bingshanyishu.github.io/posts/4b2340a4.html","excerpt":"","text":"hexo部署到github时，提示typeError [ERR_INVALID_ARG_TYPE]: The “mode“ argument must be integer. Receive…一. 错误情况在部署部署博客时，遇到这个错误， $ hexo d INFO Deploying: git INFO Clearing .deploy_git folder... INFO Copying files from public folder... FATAL Something's wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html TypeError [ERR_INVALID_ARG_TYPE]: The \"mode\" argument must be integer. Received an instance of Object at copyFile (fs.js:2040:10) at tryCatcher (D:\\HexoBlog\\node_modules\\bluebird\\js\\release\\util.js:16:23) at ret (eval at makeNodePromisifiedEval (C:\\Users\\27532\\AppData\\Roaming\\npm\\node_modules\\hexo-cli\\node_modules\\bluebird\\js\\release\\promisify.js:184:12), &lt;anonymous&gt;:13:39) at D:\\HexoBlog\\node_modules\\hexo-fs\\lib\\fs.js:144:39 at tryCatcher (D:\\HexoBlog\\node_modules\\bluebird\\js\\release\\util.js:16:23) at Promise._settlePromiseFromHandler (D:\\HexoBlog\\node_modules\\bluebird\\js\\release\\promise.js:517:31) at Promise._settlePromise (D:\\HexoBlog\\node_modules\\bluebird\\js\\release\\promise.js:574:18) at Promise._settlePromise0 (D:\\HexoBlog\\node_modules\\bluebird\\js\\release\\promise.js:619:10) at Promise._settlePromises (D:\\HexoBlog\\node_modules\\bluebird\\js\\release\\promise.js:699:18) at Promise._fulfill (D:\\HexoBlog\\node_modules\\bluebird\\js\\release\\promise.js:643:18) at Promise._resolveCallback (D:\\HexoBlog\\node_modules\\bluebird\\js\\release\\promise.js:437:57) at Promise._settlePromiseFromHandler (D:\\HexoBlog\\node_modules\\bluebird\\js\\release\\promise.js:529:17) at Promise._settlePromise (D:\\HexoBlog\\node_modules\\bluebird\\js\\release\\promise.js:574:18) at Promise._settlePromise0 (D:\\HexoBlog\\node_modules\\bluebird\\js\\release\\promise.js:619:10) at Promise._settlePromises (D:\\HexoBlog\\node_modules\\bluebird\\js\\release\\promise.js:699:18) at Promise._fulfill (D:\\HexoBlog\\node_modules\\bluebird\\js\\release\\promise.js:643:18) at Promise._resolveCallback (D:\\HexoBlog\\node_modules\\bluebird\\js\\release\\promise.js:437:57) at Promise._settlePromiseFromHandler (D:\\HexoBlog\\node_modules\\bluebird\\js\\release\\promise.js:529:17) at Promise._settlePromise (D:\\HexoBlog\\node_modules\\bluebird\\js\\release\\promise.js:574:18) at Promise._settlePromise0 (D:\\HexoBlog\\node_modules\\bluebird\\js\\release\\promise.js:619:10) at Promise._settlePromises (D:\\HexoBlog\\node_modules\\bluebird\\js\\release\\promise.js:699:18) at Promise._fulfill (D:\\HexoBlog\\node_modules\\bluebird\\js\\release\\promise.js:643:18) 二. 解决方法查阅相关文章得知，是node版本过高导致的 查看了我的版本号 $ hexo -v hexo: 3.9.0 hexo-cli: 4.3.0 os: win32 10.0.19042 node: 14.17.5 v8: 8.4.371.23-node.76 uv: 1.41.0 zlib: 1.2.11 brotli: 1.0.9 ares: 1.17.2 modules: 83 nghttp2: 1.42.0 napi: 8 llhttp: 2.1.3 openssl: 1.1.1k cldr: 39.0 icu: 69.1 tz: 2021a unicode: 13.0 hexo 版本才3.9.0, 而node 版本已经是14.17.5了 更换版本 Releases · coreybutler/nvm-windows (github.com)下载nvm 安装 (5条消息) Node版本的升级和降级之node版本管理工具nvm_Pioneer-CSDN博客_nvm升级node版本 windows如何把已安装的nodejs高版本降级为低版本(图文教程)_node.js_脚本之家 (jb51.net) 三. 附常用nvm命令查看安装过的node版本 nvm list 安装某个版本nvm install &lt;version&gt; 使用某个版本 nvm use&lt;version&gt; 载某个node版本 nvm uninstall &lt;version&gt; 如果出现乱码 更改了cmd的权限成功解决问题，以管理员运行cmd窗口，再输入nvm use 12.14.0解决问题 再运行 hexo d 成功解决","categories":[{"name":"项目之树","slug":"项目之树","permalink":"https://bingshanyishu.github.io/categories/%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%A0%91/"}],"tags":[{"name":"Blog问题","slug":"Blog问题","permalink":"https://bingshanyishu.github.io/tags/Blog%E9%97%AE%E9%A2%98/"}],"author":"Sankey"},{"title":"jQuery+CSS3实现的文字背景粒子特效","slug":"jQuery+CSS3","date":"2022-01-30T16:00:00.000Z","updated":"2022-02-13T07:19:44.763Z","comments":true,"path":"posts/4b3510a4.html","link":"","permalink":"https://bingshanyishu.github.io/posts/4b3510a4.html","excerpt":"","text":"前言一款jQuery+CSS3的文字背景粒子动画特效，一共6种粒子效果，每种文字背景的粒子效果都不同，有漂浮的有坠落的等等。 本文转载于LuckySEc用于自用，文字背景粒子特效 | LuckySec (luckyzmj.cn)。感谢大佬的分享。 0x001 特效演示 This is fires This is lines This is hearts This is bubbles This is confetti This is sunbeams .particletext { } .fire > .particle { position: absolute; background-color: rgba(255, 193, 7, 0.5); border-radius: 40px; border-top-right-radius: 0px; -webkit-animation: fires 0.8s linear infinite; animation: fires 0.8s linear infinite; -webkit-transform: rotate(-45deg); transform: rotate(-45deg); opacity: 0; } /*css keyframes 动画*/ @-webkit-keyframes fires { 0% { -webkit-transform: rotate(-70deg) translateY(0%); transform: rotate(-70deg) translateY(0%); } 25% { -webkit-transform: rotate(-20deg) translateY(-5%); transform: rotate(-20deg) translateY(-5%); opacity: 1; } 50% { -webkit-transform: rotate(-70deg) translateY(-10%); transform: rotate(-70deg) translateY(-10%); } 75% { -webkit-transform: rotate(-20deg) translateY(-20%); transform: rotate(-20deg) translateY(-20%); } 100% { -webkit-transform: rotate(-70deg) translateY(-40%); transform: rotate(-70deg) translateY(-40%); opacity: 1; } } @keyframes fires { 0% { -webkit-transform: rotate(-70deg) translateY(0%); transform: rotate(-70deg) translateY(0%); } 25% { -webkit-transform: rotate(-20deg) translateY(-5%); transform: rotate(-20deg) translateY(-5%); opacity: 1; } 50% { -webkit-transform: rotate(-70deg) translateY(-10%); transform: rotate(-70deg) translateY(-10%); } 75% { -webkit-transform: rotate(-20deg) translateY(-20%); transform: rotate(-20deg) translateY(-20%); } 100% { -webkit-transform: rotate(-70deg) translateY(-40%); transform: rotate(-70deg) translateY(-40%); opacity: 1; } } function fire() { $.each($(\".particletext.fire\"), function(){ var firecount = ($(this).width()/50)*20; for(var i = 0; i .particle { position: absolute; background-color: rgba(244, 67, 54, 0.5); -webkit-animation: lines 3s linear infinite; animation: lines 3s linear infinite; } @-webkit-keyframes lines { 0%, 50%, 100% { -webkit-transform: translateY(0%); transform: translateY(0%); } 25% { -webkit-transform: translateY(100%); transform: translateY(100%); } 75% { -webkit-transform: translateY(-100%); transform: translateY(-100%); } } @keyframes lines { 0%, 50%, 100% { -webkit-transform: translateY(0%); transform: translateY(0%); } 25% { -webkit-transform: translateY(100%); transform: translateY(100%); } 75% { -webkit-transform: translateY(-100%); transform: translateY(-100%); } } function lines() { $.each($(\".particletext.lines\"), function(){ var linecount = ($(this).width()/50)*10; for(var i = 0; i .particle { opacity: 0; position: absolute; background-color: #cc2a5d; -webkit-animation: hearts 3s ease-in infinite; animation: hearts 3s ease-in infinite; } .hearts > .particle:before,.hearts > .particle:after { position: absolute; content: ''; border-radius: 100px; top: 0px; left: 0px; width: 100%; height: 100%; background-color: #cc2a5d; } .hearts > .particle:before { -webkit-transform: translateX(-50%); transform: translateX(-50%); } .hearts > .particle:after { -webkit-transform: translateY(-50%); transform: translateY(-50%); } @-webkit-keyframes hearts { 0% { opacity: 0; -webkit-transform: translate(0, 0%) rotate(45deg); transform: translate(0, 0%) rotate(45deg); } 20% { opacity: 0.8; -webkit-transform: translate(0, -20%) rotate(45deg); transform: translate(0, -20%) rotate(45deg); } 100% { opacity: 0; -webkit-transform: translate(0, -1000%) rotate(45deg); transform: translate(0, -1000%) rotate(45deg); } } @keyframes hearts { 0% { opacity: 0; -webkit-transform: translate(0, 0%) rotate(45deg); transform: translate(0, 0%) rotate(45deg); } 20% { opacity: 0.8; -webkit-transform: translate(0, -20%) rotate(45deg); transform: translate(0, -20%) rotate(45deg); } 100% { opacity: 0; -webkit-transform: translate(0, -1000%) rotate(45deg); transform: translate(0, -1000%) rotate(45deg); } } function hearts() { $.each($(\".particletext.hearts\"), function(){ var heartcount = ($(this).width()/50)*5; for(var i = 0; i .particle { opacity: 0; position: absolute; background-color: rgba(33, 150, 243, 0.5); -webkit-animation: bubbles 3s ease-in infinite; animation: bubbles 3s ease-in infinite; border-radius: 100%; } @-webkit-keyframes bubbles { 0% { opacity: 0; } 20% { opacity: 1; -webkit-transform: translate(0, -20%); transform: translate(0, -20%); } 100% { opacity: 0; -webkit-transform: translate(0, -1000%); transform: translate(0, -1000%); } } @keyframes bubbles { 0% { opacity: 0; } 20% { opacity: 1; -webkit-transform: translate(0, -20%); transform: translate(0, -20%); } 100% { opacity: 0; -webkit-transform: translate(0, -1000%); transform: translate(0, -1000%); } } function bubbles() { $.each($(\".particletext.bubbles\"), function(){ var bubblecount = ($(this).width()/50)*10; for(var i = 0; i .particle { opacity: 0; position: absolute; -webkit-animation: confetti 3s ease-in infinite; animation: confetti 3s ease-in infinite; } .confetti > .particle.c1 { background-color: rgba(76, 175, 80, 0.5); } .confetti > .particle.c2 { background-color: rgba(156, 39, 176, 0.5); } @-webkit-keyframes confetti { 0% { opacity: 0; -webkit-transform: translateY(0%) rotate(0deg); transform: translateY(0%) rotate(0deg); } 10% { opacity: 1; } 35% { -webkit-transform: translateY(-800%) rotate(270deg); transform: translateY(-800%) rotate(270deg); } 80% { opacity: 1; } 100% { opacity: 0; -webkit-transform: translateY(2000%) rotate(1440deg); transform: translateY(2000%) rotate(1440deg); } } @keyframes confetti { 0% { opacity: 0; -webkit-transform: translateY(0%) rotate(0deg); transform: translateY(0%) rotate(0deg); } 10% { opacity: 1; } 35% { -webkit-transform: translateY(-800%) rotate(270deg); transform: translateY(-800%) rotate(270deg); } 80% { opacity: 1; } 100% { opacity: 0; -webkit-transform: translateY(2000%) rotate(1440deg); transform: translateY(2000%) rotate(1440deg); } } function confetti() { $.each($(\".particletext.confetti\"), function(){ var confetticount = ($(this).width()/50)*10; for(var i = 0; i .particle { position: absolute; background-color: rgba(253, 216, 53, 0.5); -webkit-animation: sunbeams 3s linear infinite; animation: sunbeams 3s linear infinite; } @-webkit-keyframes sunbeams { 0% { -webkit-transform: translateY(40%) rotate(0deg); transform: translateY(40%) rotate(0deg); } 50% { -webkit-transform: translateY(-40%) rotate(180deg); transform: translateY(-40%) rotate(180deg); } 100% { -webkit-transform: translateY(40%) rotate(360deg); transform: translateY(40%) rotate(360deg); } 0%,14%,17%,43%,53%,71%,80%,94%,100% { opacity: 0; } 6%,15%,24%,28%,48%,55%,78%,82%,99% { opacity: 1; } } @keyframes sunbeams { 0% { -webkit-transform: translateY(40%) rotate(0deg); transform: translateY(40%) rotate(0deg); } 50% { -webkit-transform: translateY(-40%) rotate(180deg); transform: translateY(-40%) rotate(180deg); } 100% { -webkit-transform: translateY(40%) rotate(360deg); transform: translateY(40%) rotate(360deg); } 0%,14%,17%,43%,53%,71%,80%,94%,100% { opacity: 0; } 6%,15%,24%,28%,48%,55%,78%,82%,99% { opacity: 1; } } function sunbeams() { $.each($(\".particletext.sunbeams\"), function(){ var linecount = ($(this).width()/50)*10; for(var i = 0; i","categories":[{"name":"技能之树","slug":"技能之树","permalink":"https://bingshanyishu.github.io/categories/%E6%8A%80%E8%83%BD%E4%B9%8B%E6%A0%91/"}],"tags":[{"name":"CSS3","slug":"CSS3","permalink":"https://bingshanyishu.github.io/tags/CSS3/"},{"name":"粒子特效","slug":"粒子特效","permalink":"https://bingshanyishu.github.io/tags/%E7%B2%92%E5%AD%90%E7%89%B9%E6%95%88/"}],"author":"Sankey"},{"title":"博客优化(1)一基本信息的更改","slug":"博客优化(1)一基本信息的更改","date":"2022-01-30T16:00:00.000Z","updated":"2022-02-05T11:26:48.743Z","comments":true,"path":"posts/4b3500a4.html","link":"","permalink":"https://bingshanyishu.github.io/posts/4b3500a4.html","excerpt":"","text":"博客优化(1)一基本信息的更改本博客基于Lucky大佬的博客进行优化，改成属于自己的风格，再此感谢大佬的开源，让自己节约大部分调试，以及寻找资料的时间与精力。 Lucky大佬博客：LuckySec (luckyzmj.cn) 开源博客指导文章：LuckyBlog开源搭建教程 | LuckySec (luckyzmj.cn) 博客环境搭建请去浏览[[博客搭建]]，可直接粘贴搜索即可。 1. 设计图标和logo每个网站都有相对于的图标彰显特色与理念，我也想设计出自己的图标，无奈自己不会设计，只能去那些logo网站看看找找灵感 第一个： LOGO设计神器 - logo在线设计生成器，免费在线生成公司logo设计！ (logosc.cn) step1 : 输入logo名称 step2:选择行业 step3:选择色系，我这里我选择冷色系 step4:选择字体 点击生成logo就可以看到很多logo了 挑选所需要的logo 我挑了大半天都没有找到想要的。 我就用另外一个网站在进行设计 YEELOGO_logo在线制作 点击下载，然后在做一些优化，比如去背景，调整大小，logo就做好了。 去背景网站消除图片中的背景 – remove.bg 最后将自己做的logo替换原来的logo， 2. 修改部署平台编辑根目录下的配置文件MyBlog/_config.yml，找到如下内容并修改 deploy: - type: git repo: git@github.com:bingshanyishu/bingshanyishu.github.io.git branch: master 3. 修改网站信息编辑根目录下的配置文件MyBlog/_config.yml，找到如下内容并修改为自己的信息 # Site title: 冰山一树Sankey subtitle: 'Zsの博客' description: '向下以触冰山，向上以触云层，而中以桑基为流，所见即所得！' keywords: '可视化 前端 数据分析 电气' author: Sankey language: zh-CN timezone: '' # URL ## If your site is put in a subdirectory, set url as 'http://example.com/child' and root as '/child/' url: https://bingshanyishu.github.io/ root: / # permalink: :year/:month/:day/:title/ permalink: posts/:abbrlink.html # p 是自定义的前缀 abbrlink: alg: crc32 #算法： crc16(default) and crc32 rep: hex #进制： dec(default) and hex permalink_defaults: pretty_urls: trailing_index: true # Set to false to remove trailing 'index.html' from permalinks trailing_html: true # Set to false to remove trailing '.html' from permalinks 4. 修改博客头像编辑主题目录下的配置文件MyBlog/themes/hexo-theme-matery/_config.yml，找到如下内容并修改,也可直接替换主题文件下的source中的favicon.png和medias中的logo.png # Configure website favicon and LOGO # 将以下改为自己的头像链接即可 favicon: https://s1.ax1x.com/2020/05/17/YR20js.jpg logo: https://s1.ax1x.com/2020/05/17/YRWsYT.png #如果是替换主题文件中内容·： # 配置网站favicon和网站LOGO favicon: /favicon.png logo: /medias/logo.png 5. 修改留言板简介演示效果如下： 编辑 /MyBlog/contact/index.md，修改为如下信息 --- title: contact date: 2019-10-25 00:00:00 type: \"contact\" layout: \"contact\" --- ## 畅所欲言 --- 在这里可以留下你的足迹，欢迎在下方留言，欢迎交换友链，一起交流学习！ ## 友链 --- Zsの友链信息 博客名称: 冰山一树Sankey 博客网址: https://bingshanyishu.github.io 博客介绍: 向下以触冰山，向上以触云层，而中以桑基为流，所见即所得！ 6. 修改音乐列表想要修改自己喜欢的音乐之前，需要先获取音乐列表的id。 登录网易云音乐网页版，找到自己喜欢的歌单，上面的ID对应修改 server： netease——&gt;网易云音乐 tencent——&gt;QQ音乐 kugou——&gt;酷狗音乐 编辑主题目录下的配置文件MyBlog/themes/hexo-theme-matery/_config.yml，找到如下内容并修改 # Whether to display the musics. # 是否在首页显示音乐. music: enable: true title: #非吸底模式有效 enable: true show: 听听音乐 autoHide: true # hide automaticaly server: netease #require music platform: netease, tencent, kugou, xiami, baidu type: playlist #require song, playlist, album, search, artist id: 7262197380 #require song id / playlist id / album id / search keyword fixed: true # 开启吸底模式 autoplay: false # 是否自动播放 theme: '#42b983' loop: 'all' # 音频循环播放, 可选值: 'all', 'one', 'none' order: 'random' # 音频循环顺序, 可选值: 'list', 'random' preload: 'auto' # 预加载，可选值: 'none', 'metadata', 'auto' volume: 0.7 # 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效 listFolded: true # 列表默认折叠 hideLrc: true # 隐藏歌词 # Whether to display the musics. # 单独的音乐页面. musics: enable: true title: #非吸底模式有效 enable: true show: 听听音乐 server: netease #require music platform: netease, tencent, kugou, xiami, baidu type: playlist #require song, playlist, album, search, artist id: 7262197380 #require song id / playlist id / album id / search keyword fixed: false # 开启吸底模式 autoplay: true # 是否自动播放 theme: '#42b983' loop: 'all' # 音频循环播放, 可选值: 'all', 'one', 'none' order: 'random' # 音频循环顺序, 可选值: 'list', 'random' preload: 'auto' # 预加载，可选值: 'none', 'metadata', 'auto' volume: 0.7 # 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效 listFolded: false # 列表默认折叠 listMaxHeight: \"525px\" #列表最大高度 7. 绑定 Valine 评论可参考Valine：一款基于Leancloud的无后端评论系统 - 简书 (jianshu.com) 先注册leancloud账号，官网 valine官网快速开始 | Valine 一款快速、简洁且高效的无后端评论系统。，进去点击注册可进入leancount官网 注册 实名认证加验证邮箱 然后回到leancloud主页，应用名称随便，选择开发板即可 然后点击应用，设置，应用凭证，即可看到自己的AppID和AppKey 编辑主题目录下的配置文件MyBlog/themes/hexo-theme-matery/_config.yml，找到如下内容并修改 # Valine 评论模块的配置，默认为不激活，如要使用，就请激活该配置项，并设置 appId 和 appKey. valine: enable: true appId: Ucrxxxxxxxxxxxxxxxx-xxxxsz # 自行注册valine获取 appKey: zPsLxxxxxxxxxxxxxxerLmd # 自行注册valine获取 notify: true verify: true visitor: true avatar: 'monsterid' # Gravatar style : mm/identicon/monsterid/wavatar/retro/hide pageSize: 10 placeholder: '留下你的足迹..' # Comment Box placeholder background: /medias/comment_bg.png count: true enableQQ: 16463223 # 改为自己的QQ号 recordIP: true requiredFields: - nick - mail guest_info: - nick - mail - link master: - 46606772953bed0812789d6dc955614e # md5加密后的博主邮箱 metaPlaceholder: # 输入框的背景文字 nick: 昵称/QQ号(必填) mail: 邮箱(必填) link: 网址(https://) lang: zh-CN tagMeta: # The String Array of Words to show Flag.[Just Only xCss Style mode] - 博主 - 小伙伴 - 访客 friends: # The MD5 String Array of friends Email to show friends Flag.[Just Only xCss Style mode] - cb3e577ff029d6073400d5557effd41f - 之后设计MD5加密邮箱，百度随便搜搜MD5加密就有 放在上面中 master: - 46606772953bed0812789d6dc955614e # md5加密后的博主邮箱 8. 绑定 DaoVoice 在线聊天首先在DaoVoice官网上注册一个账号。 注册成功后，第一次登录，会弹出一个窗口，填完相关信息后。点击应用设置，点击安装到网站，然后就可以找到我们需要的appid了。 编辑主题目录下的配置文件MyBlog/themes/hexo-theme-matery/_config.yml，找到如下内容并修改 daovoice: enable: true app_id: 4xxxxxxxe #DaoVoice中的app_id 小tips：点击应用设置，聊天设置可自行设计图标显示样式 ， 9. 快捷导航页面个性化编辑文件MyBlog/source/tools/index.html，以下简单标记出几处，还有其他涉及到博客信息的内容都需要改为你自己的博客信息即可。 10. 添加友情链接编辑文件MyBlog/suorce/_data/friends.json，按如下格式添加友情 [ { \"avatar\": \"https://s1.ax1x.com/2020/05/17/YRWsYT.png\", \"name\": \"Luckey\", \"introduction\": \"越努力，越幸运\", \"url\": \"http://www.luckyzmj.cn\", \"title\": \"访问主页\" },{ \"avatar\": \"https://sunhwee.com/hwsun.jpg\", \"name\": \"洪卫の博客\", \"introduction\": \"UESTC CVer\", \"url\": \"http://sunhwee.com\", \"title\": \"访问主页\" } ] 11. 添加相册比如你的图片上传图床后，链接地址如下 https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/galleries/璀璨星空/01.jpg https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/galleries/璀璨星空/02.jpg https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/galleries/动漫风景/01.jpg https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/galleries/动漫风景/02.jpg ... 首先提取出图片链接公共的部分，作为图床地址 https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/galleries/ 然后再提取图片地址中不同的部分，作为图片地址 璀璨星空/01.jpg 璀璨星空/02.jpg 动漫风景/01.jpg 动漫风景/03.jpg ... 具体怎么分割根据你自己图床的链接格式而定，以上为我的github图床格式为例。 将相册图床的地址改为你自己的图床地址，需要更改两处文件 # 例如我的图床地址为： https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/galleries/ themes/hexo-theme-matery/layout/galleries.ejs themes/hexo-theme-matery/layout/gallerie.ejs 为每个相册添加链接地址，在根目录/source/List/galleries/下新建 相册名称 文件夹，并在该文件夹下新建 index.md 最后，在根目录/source/_data/galleries.json中添加图片链接，格式如下, [ { \"name\": \"璀璨星空\", \"cover\": \"璀璨星空/01.jpg\", \"description\": \"璀璨星空\", \"photos\": [ \"璀璨星空/01.jpg\", \"璀璨星空/02.jpg\", \"璀璨星空/03.jpg\", \"璀璨星空/04.jpg\", \"璀璨星空/05.jpg\", \"璀璨星空/06.jpg\", \"璀璨星空/07.jpg\", \"璀璨星空/08.jpg\", \"璀璨星空/09.jpg\", \"璀璨星空/10.jpg\", \"璀璨星空/11.jpg\", \"璀璨星空/12.jpg\", \"璀璨星空/13.jpg\", \"璀璨星空/14.jpg\", \"璀璨星空/15.jpg\", \"璀璨星空/16.jpg\" ] }, { \"name\": \"动漫风景\", \"cover\": \"动漫风景/01.jpg\", \"description\": \"动漫风景\", \"photos\": [ \"动漫风景/01.jpg\", \"动漫风景/02.jpg\", \"动漫风景/03.jpg\", \"动漫风景/04.jpg\", \"动漫风景/05.jpg\", \"动漫风景/06.jpg\", \"动漫风景/07.jpg\", \"动漫风景/08.jpg\", \"动漫风景/09.jpg\", \"动漫风景/10.jpg\", \"动漫风景/11.jpg\", \"动漫风景/12.jpg\", \"动漫风景/13.jpg\", \"动漫风景/14.jpg\", \"动漫风景/15.jpg\", \"动漫风景/16.jpg\" ] } ] 12. 站点统计功能站点统计的数据来源于百度统计,当你的网站被百度收录后就会在百度统计中出现数据，具体效果如下： 由于博客的统计页面数据不能直接从百度站点中调用，因此需要自行从百度站点中将相应数据填入博客站点统计页面的源代码文件中，个人建议每隔一个月手动更新一次数据。 打开MyBlog\\themes\\hexo-theme-matery\\layout\\census.ejs文件，将百度统计中的数据填入源代码中，修改代码如下： 13. 仿Windows个性化仿Windows页面是采用YLUI实现的，YLUI提供了社区版本供大家学习使用，具体效果如下： 这里我选择关闭了 大家可以查看YLUI官方的开发文档进行开发，有不懂的可以加官方的QQ群：191372634 进行讨论。 14. 博客特色背景图无文章特色背景图： 打开主题配置文件MyBlog\\themes\\hexo-theme-matery\\_config.yml，修改替换如下代码即可： # The post featured images that needs to be displayed when there is no image. # 无文章特色图片时需要显示的文章特色图片. featureImages: - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/1.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/2.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/3.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/4.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/5.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/6.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/7.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/8.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/9.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/10.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/11.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/12.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/13.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/14.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/15.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/16.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/17.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/18.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/19.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/20.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/21.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/22.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/23.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/24.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/25.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/26.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/27.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/28.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/29.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/30.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/31.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/32.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/33.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/34.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/35.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/36.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/37.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/38.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/39.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/40.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/41.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/42.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/43.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/44.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/45.jpg - https://cdn.jsdelivr.net/gh/bingshanyishu/HexoBlog@main/imagesBlog/posts/46.jpg 15. 新增社交链接由于默认的链接没有b站，CSDN等，这里添加自定义 在主题的 _config.yml 文件中，默认支持 QQ、GitHub 和邮箱的配置，可以在主题文件的 /layout/_partial/social-link.ejs 文件中，新增、修改你需要的社交链接地址 将下面需要添加的链接代码放到该文件的最后面，如果每个可放在rss之前 添加csdn链接 &lt;% if (theme.socialLink.csdn) { %&gt; &lt;a href=\"https://www.csdn.net/&lt;%= theme.socialLink.csdn %&gt;\" class=\"tooltipped\" target=\"_blank\" data-tooltip=\"访问我的CSDN主页\" data-position=\"top\" data-delay=\"50\"&gt; &lt;i class=\"fa fa-codiepie\"&gt;&lt;/i&gt; &lt;/a&gt; &lt;% } %&gt; 添加b站链接 &lt;% if (theme.socialLink.bilibili) { %&gt; &lt;a href=\"&lt;%= theme.socialLink.bilibili %&gt;\" class=\"tooltipped\" target=\"_blank\" data-tooltip=\"访问我的bilibili主页\" data-position=\"top\" data-delay=\"50\"&gt; &lt;i class=\"fab fa-codiepie\"&gt;&lt;/i&gt; &lt;/a&gt; &lt;% } %&gt; 社交图标可去这个网站中查找：图标库 – Font Awesome 中文网，但是没有csdn和b站链接，可找相似的来替代。 但注意：使用font awesome图标版本也需要对应，不然无法显示。这里版本为5.11.0 然后在_config.yml中的socialLink: 加对应即可，awesome图标可去这些博客了解 Font Awesome5.x 页面引入的几种方式和应用,及与4.x的变化 Font Awesome，一套绝佳的图标字体库和CSS框架 (dashgame.com) socialLink: csdn: https://blog.csdn.net/m0_59464010?spm=1000.2115.3001.5343 //改成自己的 bilibili: https://bilibili.com/484432829?from=search&amp;seid=1051383716784056202 //改成自己的 16.勿渲染自定义页面hexo在生成页面后会自动渲染所有的html页面，但是有时候有一些自定义页面采用自己渲染的代码，如果再加上hexo的渲染，会引起混乱。为此我们可以定义让hexo不要渲染我们自己的页面。 font matter方法将代码直接写到index.md中，然后再Front matter 中添加 layout: false title: tools date: 2020-04-28 00:00:00 type: \"tools\" layout: false --- skip render方法在博客根目录下的 _config.yml，找到 skip_render # 指定目录跳过hexo渲染 skip_render: - 'tools/*' - 'tools/**' 注：tools/* 表示在目录 source/fireworks 下的文件全部跳过渲染，tools/** 表示在博客根目录 source/tools/ 文件夹下的文件全部跳过渲染（例如页面的 js、css 在另一个文件夹中） 例：webstackwebstack是一个纯静态的网址导航网站，内容均由viggo收集并整理。项目基于bootstrap前端框架开发。 Github：https://github.com/WebStackPage/WebStackPage.github.io 在博客根目录 source/下新建tools，然后新建index.html,将webstack网页源码全选复制粘贴到里面。 然后打开博客根目录下配置文件_config.yml，找到skip_render，做如下修改： skip_render: - 'tools/*' - 'tools/**'","categories":[{"name":"项目之树","slug":"项目之树","permalink":"https://bingshanyishu.github.io/categories/%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%A0%91/"}],"tags":[{"name":"Blog","slug":"Blog","permalink":"https://bingshanyishu.github.io/tags/Blog/"}],"author":"Sankey"}],"categories":[{"name":"技能之树","slug":"技能之树","permalink":"https://bingshanyishu.github.io/categories/%E6%8A%80%E8%83%BD%E4%B9%8B%E6%A0%91/"},{"name":"项目之树","slug":"项目之树","permalink":"https://bingshanyishu.github.io/categories/%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%A0%91/"}],"tags":[{"name":"Tableau学习","slug":"Tableau学习","permalink":"https://bingshanyishu.github.io/tags/Tableau%E5%AD%A6%E4%B9%A0/"},{"name":"Tableau绘图","slug":"Tableau绘图","permalink":"https://bingshanyishu.github.io/tags/Tableau%E7%BB%98%E5%9B%BE/"},{"name":"Blog","slug":"Blog","permalink":"https://bingshanyishu.github.io/tags/Blog/"},{"name":"Blog问题","slug":"Blog问题","permalink":"https://bingshanyishu.github.io/tags/Blog%E9%97%AE%E9%A2%98/"},{"name":"CSS3","slug":"CSS3","permalink":"https://bingshanyishu.github.io/tags/CSS3/"},{"name":"粒子特效","slug":"粒子特效","permalink":"https://bingshanyishu.github.io/tags/%E7%B2%92%E5%AD%90%E7%89%B9%E6%95%88/"}]}